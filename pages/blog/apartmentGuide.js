// 'use client'

// import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
// import Header from "@/app/components/Header"
// import { store } from "@/app/store"
// import { Provider } from "react-redux"
// import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery } from '@mui/material'
// import Link from 'next/link'
// import { Home, Hotel, Pets, Restaurant, Groups, Savings, CheckCircle, ArrowBack } from '@mui/icons-material'
// import Footer from "@/app/components/Footer"
// import Head from 'next/head'

// const APARTMENT_CONTENT = {
//   ua: {
//     title: "–ö–≤–∞—Ä—Ç–∏—Ä–∏  –ø–æ–¥–æ–±–æ–≤–æ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É",
//     metaDescription: "üîù –ö–≤–∞—Ä—Ç–∏—Ä–∏ –ø–æ—Å—É—Ç–æ—á–Ω–æ —É –≤—Å—ñ—Ö –º—ñ—Å—Ç–∞—Ö –£–∫—Ä–∞—ó–Ω–∏. –ë–µ–∑ –∫–æ–º—ñ—Å—ñ–π —Ç–∞ –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫—ñ–≤. –í–µ–ª–∏–∫–∏–π –≤–∏–±—ñ—Ä –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —Ç–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è.",
//     subtitle: "–ß–æ–º—É –æ—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∏ –Ω–∞ –¥–æ–±—É –≤–∏–≥—ñ–¥–Ω—ñ—à–∞ –∑–∞ –≥–æ—Ç–µ–ª—å?",
//     advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏",
//     advantages: [
//       "–ï–∫–æ–Ω–æ–º—ñ—è 30-70% –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ –≥–æ—Ç–µ–ª—è–º–∏",
//       "–ë–µ–∑ –æ–±–º–µ–∂–µ–Ω—å –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó –¥—Ä—É–∑—ñ–≤",
//       "–ü–æ–≤–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å - –Ω—ñ—Ö—Ç–æ –Ω–µ —Ç—É—Ä–±—É—î",
//       "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≥–æ—Ç—É–≤–∞—Ç–∏ - –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∞ –∫—É—Ö–Ω—è",
//       "–î–æ–º–∞—à–Ω—ñ —Ç–≤–∞—Ä–∏–Ω–∏ –∑–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é",
//       "–ë—ñ–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ—Ä—É: –æ–∫—Ä–µ–º—ñ –∫—ñ–º–Ω–∞—Ç–∏",
//       "–ì–Ω—É—á–∫–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑–∞—ó–∑–¥—É/–≤–∏—ó–∑–¥—É"
//     ],
//     tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω—É –∫–≤–∞—Ä—Ç–∏—Ä—É?",
//     tips: [
//       "–ó—Ä—É—á–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è - –±–ª–∏–∑—å–∫—ñ—Å—Ç—å –¥–æ —Ü–µ–Ω—Ç—Ä—É",
//       "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑—Ä—É—á–Ω–æ—Å—Ç—ñ: –∫—É—Ö–Ω—è, –ø—Ä–∞–ª—å–Ω–∞ –º–∞—à–∏–Ω–∞, Wi-Fi",
//       "–£–≤–∞–∂–Ω–æ –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Ñ–æ—Ç–æ —Ç–∞ –≤—ñ–¥–≥—É–∫–∏",
//       "–£—Ç–æ—á–Ω—ñ—Ç—å —É–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏",
//       "–û–±–≥–æ–≤–æ—Ä—ñ—Ç—å –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑ —Ç–≤–∞—Ä–∏–Ω–∞–º–∏",
//       "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –æ–ø–∞–ª–µ–Ω–Ω—è —Ç–∞ –≥–∞—Ä—è—á—É –≤–æ–¥—É",
//       "–£–∑–≥–æ–¥—å—Ç–µ —á–∞—Å –∑–∞—ó–∑–¥—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤"
//     ],
//     backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É"
//   },
//   ru: {
//     title: "–ö–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ—Å—É—Ç–æ—á–Ω–æ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
//     metaDescription: "üîù –ö–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ—Å—É—Ç–æ—á–Ω–æ –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö –£–∫—Ä–∞–∏–Ω—ã. –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤. –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.",
//     subtitle: "–ü–æ—á–µ–º—É –∞—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤—ã–≥–æ–¥–Ω–µ–µ –æ—Ç–µ–ª—è?",
//     advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞",
//     advantages: [
//       "–≠–∫–æ–Ω–æ–º–∏—è 30-70% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –æ—Ç–µ–ª—è–º–∏",
//       "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π",
//       "–ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å - –Ω–∏–∫—Ç–æ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç",
//       "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è",
//       "–î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏",
//       "–ë–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞: –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã",
//       "–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –∑–∞–µ–∑–¥–∞/–≤—ã–µ–∑–¥–∞"
//     ],
//     tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É?",
//     tips: [
//       "–£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - –±–ª–∏–∑–æ—Å—Ç—å –∫ —Ü–µ–Ω—Ç—Ä—É",
//       "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–¥–æ–±—Å—Ç–≤–∞: –∫—É—Ö–Ω—è, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, Wi-Fi",
//       "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —Ñ–æ—Ç–æ –∏ –æ—Ç–∑—ã–≤—ã",
//       "–£—Ç–æ—á–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã",
//       "–û–±—Å—É–¥–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏",
//       "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ –∏ –≥–æ—Ä—è—á—É—é –≤–æ–¥—É",
//       "–°–æ–≥–ª–∞—Å—É–π—Ç–µ –≤—Ä–µ–º—è –∑–∞–µ–∑–¥–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–π"
//     ],
//     backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥"
//   }
// }

// function ApartmentGuide() {
//   const { currentLanguage } = useLanguage()
//   const t = APARTMENT_CONTENT[currentLanguage]
//   const theme = useTheme()
//   const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

//   return (
//     <>
//       <Head>
//         <title>{t.title}</title>
//         <meta name="description" content={t.metaDescription} />
//       </Head>

//       <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
//         <Header />
        
//         <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
//           <Paper elevation={3} sx={{ 
//             p: isMobile ? 2 : 4, 
//             borderRadius: 2, 
//             mb: 4,
//             '& .MuiListItem-root': {
//               py: isMobile ? 0.5 : 1
//             }
//           }}>
//             <Typography variant="h4" component="h1" sx={{ 
//               fontWeight: 700,
//               textAlign: 'center',
//               color: 'primary.main',
//               fontSize: isMobile ? '1.5rem' : '2rem',
//               mb: 2
//             }}>
//               {t.title}
//             </Typography>

//              {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–¥–æ–±–∞–≤–ª–µ–Ω–æ –∑–¥–µ—Å—å) */}
//              <Box sx={{ 
//               width: '100%',
//               height: isMobile ? 200 : 500,
//               position: 'relative',
//               mb: 4,
//               borderRadius: 2,
//               overflow: 'hidden',
//               boxShadow: theme.shadows[2]
//             }}>
//               <img
//                 src="/apartment.png" // –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
//                 alt={t.title}
//                 style={{
//                   width: '100%',
//                   height: '100%',
//                   objectFit: 'cover',
//                   objectPosition: 'center'
//                 }}
//               />
//             </Box>

//             <Typography variant="h6" component="p" sx={{
//               textAlign: 'center',
//               color: 'text.secondary',
//               mb: 4,
//               fontSize: isMobile ? '1rem' : '1.1rem'
//             }}>
//               {t.subtitle}
//             </Typography>

//             {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
//             <Box sx={{ mb: 4 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.advantagesTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.advantages.map((item, index) => (
//                   <ListItem key={`adv-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>

//               <Box sx={{ 
//                 display: 'flex', 
//                 flexWrap: 'wrap', 
//                 gap: 1, 
//                 mt: 3,
//                 justifyContent: 'center'
//               }}>
//                 <Chip 
//                   icon={<Savings fontSize="small" />} 
//                   label={currentLanguage === 'ua' ? "–ï–∫–æ–Ω–æ–º—ñ—è" : "–≠–∫–æ–Ω–æ–º–∏—è"} 
//                   size={isMobile ? 'small' : 'medium'}
//                 />
//                 <Chip 
//                   icon={<Groups fontSize="small" />} 
//                   label={currentLanguage === 'ua' ? "–î–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó" : "–î–ª—è –∫–æ–º–ø–∞–Ω–∏–∏"} 
//                   size={isMobile ? 'small' : 'medium'}
//                 />
//                 <Chip 
//                   icon={<Restaurant fontSize="small" />} 
//                   label={currentLanguage === 'ua' ? "–ö—É—Ö–Ω—è" : "–ö—É—Ö–Ω—è"} 
//                   size={isMobile ? 'small' : 'medium'}
//                 />
//                 <Chip 
//                   icon={<Pets fontSize="small" />} 
//                   label={currentLanguage === 'ua' ? "–¢–≤–∞—Ä–∏–Ω–∏" : "–ñ–∏–≤–æ—Ç–Ω—ã–µ"} 
//                   size={isMobile ? 'small' : 'medium'}
//                 />
//               </Box>
//             </Box>

//             {/* –°–æ–≤–µ—Ç—ã */}
//             <Box sx={{ mb: 3 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Hotel fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.tipsTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.tips.map((item, index) => (
//                   <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>
//             </Box>
//           </Paper>

//           <Box sx={{ textAlign: 'center', mt: 2 }}>
//             <Link href="/blog" passHref legacyBehavior>
//               <Button 
//                 variant="contained" 
//                 size={isMobile ? 'medium' : 'large'}
//                 startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
//                 sx={{ 
//                   px: isMobile ? 3 : 4,
//                   py: 1,
//                   fontWeight: 600,
//                   fontSize: isMobile ? '0.9rem' : '1rem',
//                   borderRadius: 2
//                 }}
//               >
//                 {t.backButton}
//               </Button>
//             </Link>
//           </Box>
//         </Container>
//         <Footer />
//       </Box>
//     </>
//   )
// }

// export default function ApartmentPage() {
//   return (
//     <Provider store={store}>
//       <LanguageProvider>
//         <ApartmentGuide />
//       </LanguageProvider>
//     </Provider>
//   )
// }




import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Divider } from '@mui/material'
import Link from 'next/link'
import { Home, Hotel, Pets, Restaurant, Groups, Savings, CheckCircle, ArrowBack } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'
import RelatedPosts from './components/RelatedPosts'

const APARTMENT_CONTENT = {
  ua: {
    title: "–ö–≤–∞—Ä—Ç–∏—Ä–∏ –ø–æ–¥–æ–±–æ–≤–æ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É",
    metaDescription: "üîù –ö–≤–∞—Ä—Ç–∏—Ä–∏ –ø–æ—Å—É—Ç–æ—á–Ω–æ —É –≤—Å—ñ—Ö –º—ñ—Å—Ç–∞—Ö –£–∫—Ä–∞—ó–Ω–∏. –ë–µ–∑ –∫–æ–º—ñ—Å—ñ–π —Ç–∞ –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫—ñ–≤. –í–µ–ª–∏–∫–∏–π –≤–∏–±—ñ—Ä –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —Ç–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è.",
    subtitle: "–ß–æ–º—É –æ—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∏ –Ω–∞ –¥–æ–±—É –≤–∏–≥—ñ–¥–Ω—ñ—à–∞ –∑–∞ –≥–æ—Ç–µ–ª—å?",
    advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏",
    advantages: [
      "–ï–∫–æ–Ω–æ–º—ñ—è 30-70% –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ –≥–æ—Ç–µ–ª—è–º–∏",
      "–ë–µ–∑ –æ–±–º–µ–∂–µ–Ω—å –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó –¥—Ä—É–∑—ñ–≤",
      "–ü–æ–≤–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å - –Ω—ñ—Ö—Ç–æ –Ω–µ —Ç—É—Ä–±—É—î",
      "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≥–æ—Ç—É–≤–∞—Ç–∏ - –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∞ –∫—É—Ö–Ω—è",
      "–î–æ–º–∞—à–Ω—ñ —Ç–≤–∞—Ä–∏–Ω–∏ –∑–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é",
      "–ë—ñ–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ—Ä—É: –æ–∫—Ä–µ–º—ñ –∫—ñ–º–Ω–∞—Ç–∏",
      "–ì–Ω—É—á–∫–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑–∞—ó–∑–¥—É/–≤–∏—ó–∑–¥—É"
    ],
    tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω—É –∫–≤–∞—Ä—Ç–∏—Ä—É?",
    tips: [
      "–ó—Ä—É—á–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è - –±–ª–∏–∑—å–∫—ñ—Å—Ç—å –¥–æ —Ü–µ–Ω—Ç—Ä—É",
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑—Ä—É—á–Ω–æ—Å—Ç—ñ: –∫—É—Ö–Ω—è, –ø—Ä–∞–ª—å–Ω–∞ –º–∞—à–∏–Ω–∞, Wi-Fi",
      "–£–≤–∞–∂–Ω–æ –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Ñ–æ—Ç–æ —Ç–∞ –≤—ñ–¥–≥—É–∫–∏",
      "–£—Ç–æ—á–Ω—ñ—Ç—å —É–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏",
      "–û–±–≥–æ–≤–æ—Ä—ñ—Ç—å –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑ —Ç–≤–∞—Ä–∏–Ω–∞–º–∏",
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –æ–ø–∞–ª–µ–Ω–Ω—è —Ç–∞ –≥–∞—Ä—è—á—É –≤–æ–¥—É",
      "–£–∑–≥–æ–¥—å—Ç–µ —á–∞—Å –∑–∞—ó–∑–¥—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É"
  },
  ru: {
    title: "–ö–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ—Å—É—Ç–æ—á–Ω–æ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
    metaDescription: "üîù –ö–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ—Å—É—Ç–æ—á–Ω–æ –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö –£–∫—Ä–∞–∏–Ω—ã. –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤. –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.",
    subtitle: "–ü–æ—á–µ–º—É –∞—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤—ã–≥–æ–¥–Ω–µ–µ –æ—Ç–µ–ª—è?",
    advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞",
    advantages: [
      "–≠–∫–æ–Ω–æ–º–∏—è 30-70% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –æ—Ç–µ–ª—è–º–∏",
      "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π",
      "–ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å - –Ω–∏–∫—Ç–æ –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç",
      "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è",
      "–î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏",
      "–ë–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞: –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã",
      "–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –∑–∞–µ–∑–¥–∞/–≤—ã–µ–∑–¥–∞"
    ],
    tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É?",
    tips: [
      "–£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - –±–ª–∏–∑–æ—Å—Ç—å –∫ —Ü–µ–Ω—Ç—Ä—É",
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–¥–æ–±—Å—Ç–≤–∞: –∫—É—Ö–Ω—è, —Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, Wi-Fi",
      "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —Ñ–æ—Ç–æ –∏ –æ—Ç–∑—ã–≤—ã",
      "–£—Ç–æ—á–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã",
      "–û–±—Å—É–¥–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏",
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ –∏ –≥–æ—Ä—è—á—É—é –≤–æ–¥—É",
      "–°–æ–≥–ª–∞—Å—É–π—Ç–µ –≤—Ä–µ–º—è –∑–∞–µ–∑–¥–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–π"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥"
  }
}

// –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
function ApartmentGuide() {
  const { currentLanguage } = useLanguage()
  const t = APARTMENT_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–æ–π */}
            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/apartment.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
                loading="eager" // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.advantagesTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.advantages.map((item, index) => (
                  <ListItem key={`adv-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                <Chip 
                  icon={<Savings fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–ï–∫–æ–Ω–æ–º—ñ—è" : "–≠–∫–æ–Ω–æ–º–∏—è"} 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Groups fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–î–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó" : "–î–ª—è –∫–æ–º–ø–∞–Ω–∏–∏"} 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Restaurant fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–ö—É—Ö–Ω—è" : "–ö—É—Ö–Ω—è"} 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Pets fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–¢–≤–∞—Ä–∏–Ω–∏" : "–ñ–∏–≤–æ—Ç–Ω—ã–µ"} 
                  size={isMobile ? 'small' : 'medium'}
                />
              </Box>
            </Box>

            {/* –°–æ–≤–µ—Ç—ã */}
            <Box sx={{ mb: 3 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Hotel fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>

          {/* –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          <Divider sx={{ my: 4 }} />
          
          {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ */}
          <RelatedPosts currentSlug="apartmentGuide" />

          <Box sx={{ textAlign: 'center', mt: 4 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏
export async function getStaticProps() {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  // –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  
  return {
    props: {
      // –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞–∫ –ø—Ä–æ–ø—Å—ã
      generatedAt: new Date().toISOString(),
    },
    // –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    revalidate: 86400, // 24 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  }
}

export default function ApartmentPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <ApartmentGuide />
      </LanguageProvider>
    </Provider>
  )
}