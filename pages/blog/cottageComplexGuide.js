// 'use client'

// import React from 'react'
// import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
// import Header from "@/app/components/Header"
// import { store } from "@/app/store"
// import { Provider } from "react-redux"
// import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
// import Link from 'next/link'
// import { Home, Groups, Celebration, Restaurant, Pool, Nature, CheckCircle, ArrowBack, OutdoorGrill } from '@mui/icons-material'
// import Footer from "@/app/components/Footer"
// import Head from 'next/head'
// import RelatedPosts from './components/RelatedPosts'
// const COTTAGE_COMPLEX_CONTENT = {
//   ua: {
//     title: "–ö–æ—Ç–µ–¥–∂–Ω—ñ –º—ñ—Å—Ç–µ—á–∫–∞ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π",
//     metaDescription: "üîù –û—Ä–µ–Ω–¥–∞ –∫–æ—Ç–µ–¥–∂–Ω–∏—Ö –º—ñ—Å—Ç–µ—á–æ–∫ –¥–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ñ–≤ —Ç–∞ –≤–µ–ª–∏–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π. –ü–æ–≤–Ω–∏–π –∫–æ–º—Ñ–æ—Ä—Ç —Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å.",
//     subtitle: "–ü–µ—Ä–µ–≤–∞–≥–∏ –æ—Ä–µ–Ω–¥–∏ —Ü—ñ–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å—É –¥–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç",
//     intro: "–û—Ä–µ–Ω–¥–∞ —Ü—ñ–ª–æ–≥–æ –∫–æ—Ç–µ–¥–∂–Ω–æ–≥–æ –º—ñ—Å—Ç–µ—á–∫–∞ - —ñ–¥–µ–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤ –∞–±–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –∑ –¥—Ä—É–∑—è–º–∏. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –ø–æ–≤–Ω—É –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å —Ç–∞ –≤—Å—ñ –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –¥–ª—è –Ω–µ–∑–∞–±—É—Ç–Ω—å–æ–≥–æ —Å–≤—è—Ç–∞.",
//     benefitsTitle: "–ß–æ–º—É –≤–∞—Ä—Ç–æ –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ —Ü—ñ–ª–∏–π –∫–æ–º–ø–ª–µ–∫—Å?",
//     benefits: [
//       "–ü–æ–≤–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å —Ç–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω—ñ—Ö",
//       "–í–ª–∞—Å–Ω–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–±–∞—Å–µ–π–Ω–∏, –º–∞–Ω–≥–∞–ª—å–Ω—ñ –∑–æ–Ω–∏, —Å–ø–æ—Ä—Ç–º–∞–π–¥–∞–Ω—á–∏–∫–∏)",
//       "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –≤—Å—ñ—Ö –≥–æ—Å—Ç–µ–π —Ä–∞–∑–æ–º",
//       "–ü–µ—Ä—Å–æ–Ω–∞–ª, —è–∫–∏–π –ø–æ–¥–±–∞—î –ø—Ä–æ –≤–∞—à –∫–æ–º—Ñ–æ—Ä—Ç",
//       "–ì–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –æ—Ä–µ–Ω–¥–∏ —Ç–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥"
//     ],
//     typesTitle: "–í–∞—Ä—ñ–∞–Ω—Ç–∏ –∫–æ—Ç–µ–¥–∂–Ω–∏—Ö –º—ñ—Å—Ç–µ—á–æ–∫",
//     types: [
//       {
//         name: "–î–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç",
//         desc: "–Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –≤–µ—Å—ñ–ª—å, —é–≤—ñ–ª–µ—ó–≤ —Ç–∞ —Ä–æ–¥–∏–Ω–Ω–∏—Ö –∑–±–æ—Ä—ñ–≤",
//         features: ["–í–µ–ª–∏–∫—ñ –∑–∞–ª–∏", "–õ—ñ—Ç–Ω—ñ —Ç–µ—Ä–∞—Å–∏", "–î–∏—Ç—è—á—ñ –º–∞–π–¥–∞–Ω—á–∏–∫–∏"],
//         icon: <Celebration />
//       },
//       {
//         name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫",
//         desc: "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –∫–æ–º–ø–ª–µ–∫—Å–∏ –¥–ª—è —Ç–∏–º–±—É–ª–¥–∏–Ω–≥—É —Ç–∞ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –∫–æ–ª–µ–∫—Ç–∏–≤—É",
//         features: ["–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª–∏", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ –º–∞–π–¥–∞–Ω—á–∏–∫–∏", "SPA-–∑–æ–Ω–∏"],
//         icon: <Groups />
//       },
//       {
//         name: "–í—ñ–¥–ø–æ—á–∏–Ω–æ–∫ –∑ –¥—Ä—É–∑—è–º–∏",
//         desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –º—ñ—Å—Ç–µ—á–∫–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ–π –¥—Ä—É–∑—ñ–≤",
//         features: ["–ö—ñ–Ω–æ—Ç–µ–∞—Ç—Ä–∏", "–ë—ñ–ª—å—è—Ä–¥–Ω—ñ", "–õ—ñ—Ç–Ω—ñ –∫—É—Ö–Ω—ñ"],
//         icon: <Home />
//       }
//     ],
//     tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å?",
//     tips: [
//       "–í–∏–∑–Ω–∞—á—Ç–µ —Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π –¥–ª—è —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è",
//       "–ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–æ–Ω (—Å–≤—è—Ç–∫–æ–≤–∞, —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è, –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É)",
//       "–£—Ç–æ—á–Ω—ñ—Ç—å, —á–∏ –≤–∫–ª—é—á–µ–Ω–æ –≤ –æ—Ä–µ–Ω–¥—É –æ–±—Å–ª—É–≥–æ–≤—É—é—á–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª",
//       "–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü–µ –∑ –≥–∞—Ä–Ω–∏–º–∏ –ø–µ–π–∑–∞–∂–∞–º–∏ –¥–ª—è —Ñ–æ—Ç–æ–∑–π–æ–º–∫–∏",
//       "–ó–∞–º–æ–≤—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å (–∫–µ–π—Ç–µ—Ä–∏–Ω–≥, –¥–µ–∫–æ—Ä, –∞–Ω—ñ–º–∞—Ç–æ—Ä–∏)"
//     ],
//     backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
//     features: [
//       { icon: <Home />, label: "–í–µ–ª–∏–∫—ñ –∫–æ—Ç–µ–¥–∂—ñ" },
//       { icon: <Pool />, label: "–ë–∞—Å–µ–π–Ω–∏" },
//       { icon: <OutdoorGrill />, label: "–ú–∞–Ω–≥–∞–ª—å–Ω—ñ –∑–æ–Ω–∏" },
//       { icon: <Restaurant />, label: "–†–µ—Å—Ç–æ—Ä–∞–Ω–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è" },
//       { icon: <Nature />, label: "–ñ–∏–≤–æ–ø–∏—Å–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó" }
//     ]
//   },
//   ru: {
//     title: "–ö–æ—Ç—Ç–µ–¥–∂–Ω—ã–µ –≥–æ—Ä–æ–¥–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π",
//     metaDescription: "üîù –ê—Ä–µ–Ω–¥–∞ –∫–æ—Ç—Ç–µ–¥–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–∫–æ–≤ –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–æ–≤ –∏ –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π. –ü–æ–ª–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å.",
//     subtitle: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∞—Ä–µ–Ω–¥—ã —Ü–µ–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
//     intro: "–ê—Ä–µ–Ω–¥–∞ —Ü–µ–ª–æ–≥–æ –∫–æ—Ç—Ç–µ–¥–∂–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∫–∞ - –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–ª–∏ –æ—Ç–¥—ã—Ö–∞ —Å –¥—Ä—É–∑—å—è–º–∏. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–ª–Ω—É—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –≤—Å–µ —É–¥–æ–±—Å—Ç–≤–∞ –¥–ª—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞.",
//     benefitsTitle: "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Ü–µ–ª—ã–π –∫–æ–º–ø–ª–µ–∫—Å?",
//     benefits: [
//       "–ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö",
//       "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–±–∞—Å—Å–µ–π–Ω—ã, –º–∞–Ω–≥–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã, —Å–ø–æ—Ä—Ç–ø–ª–æ—â–∞–¥–∫–∏)",
//       "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –≥–æ—Å—Ç–µ–π –≤–º–µ—Å—Ç–µ",
//       "–ü–µ—Ä—Å–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –≤–∞—à–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ",
//       "–ì–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥"
//     ],
//     typesTitle: "–í–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ—Ç—Ç–µ–¥–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–∫–æ–≤",
//     types: [
//       {
//         name: "–î–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
//         desc: "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–≤–∞–¥–µ–±, —é–±–∏–ª–µ–µ–≤ –∏ —Å–µ–º–µ–π–Ω—ã—Ö —Å–±–æ—Ä–æ–≤",
//         features: ["–ë–æ–ª—å—à–∏–µ –∑–∞–ª—ã", "–õ–µ—Ç–Ω–∏–µ —Ç–µ—Ä—Ä–∞—Å—ã", "–î–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏"],
//         icon: <Celebration />
//       },
//       {
//         name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö",
//         desc: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã –¥–ª—è —Ç–∏–º–±–∏–ª–¥–∏–Ω–≥–∞ –∏ –æ—Ç–¥—ã—Ö–∞ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞",
//         features: ["–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª—ã", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏", "SPA-–∑–æ–Ω—ã"],
//         icon: <Groups />
//       },
//       {
//         name: "–û—Ç–¥—ã—Ö —Å –¥—Ä—É–∑—å—è–º–∏",
//         desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –≥–æ—Ä–æ–¥–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π –¥—Ä—É–∑–µ–π",
//         features: ["–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã", "–ë–∏–ª—å—è—Ä–¥–Ω—ã–µ", "–õ–µ—Ç–Ω–∏–µ –∫—É—Ö–Ω–∏"],
//         icon: <Home />
//       }
//     ],
//     tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å?",
//     tips: [
//       "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è",
//       "–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–æ–Ω (–ø—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è, –ø–∏—Ç–∞–Ω–∏—è, –æ—Ç–¥—ã—Ö–∞)",
//       "–£—Ç–æ—á–Ω–∏—Ç–µ, –≤–∫–ª—é—á–µ–Ω –ª–∏ –≤ –∞—Ä–µ–Ω–¥—É –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª",
//       "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –ø–µ–π–∑–∞–∂–∞–º–∏ –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏",
//       "–ó–∞–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∑–∞—Ä–∞–Ω–µ–µ (–∫–µ–π—Ç–µ—Ä–∏–Ω–≥, –¥–µ–∫–æ—Ä, –∞–Ω–∏–º–∞—Ç–æ—Ä—ã)"
//     ],
//     backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
//     features: [
//       { icon: <Home />, label: "–ë–æ–ª—å—à–∏–µ –∫–æ—Ç—Ç–µ–¥–∂–∏" },
//       { icon: <Pool />, label: "–ë–∞—Å—Å–µ–π–Ω—ã" },
//       { icon: <OutdoorGrill />, label: "–ú–∞–Ω–≥–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã" },
//       { icon: <Restaurant />, label: "–†–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ" },
//       { icon: <Nature />, label: "–ñ–∏–≤–æ–ø–∏—Å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏" }
//     ]
//   }
// }

// function CottageComplexGuide() {
//   const { currentLanguage } = useLanguage()
//   const t = COTTAGE_COMPLEX_CONTENT[currentLanguage]
//   const theme = useTheme()
//   const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

//   return (
//     <>
//       <Head>
//         <title>{t.title}</title>
//         <meta name="description" content={t.metaDescription} />
//       </Head>

//       <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
//         <Header />
        
//         <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
//           <Paper elevation={3} sx={{ 
//             p: isMobile ? 2 : 4, 
//             borderRadius: 2, 
//             mb: 4,
//             '& .MuiListItem-root': {
//               py: isMobile ? 0.5 : 1
//             }
//           }}>
//             <Typography variant="h4" component="h1" sx={{ 
//               fontWeight: 700,
//               textAlign: 'center',
//               color: 'primary.main',
//               fontSize: isMobile ? '1.5rem' : '2rem',
//               mb: 2
//             }}>
//               {t.title}
//             </Typography>

//             <Box sx={{ 
//               width: '100%',
//               height: isMobile ? 200 : 500,
//               position: 'relative',
//               mb: 4,
//               borderRadius: 2,
//               overflow: 'hidden',
//               boxShadow: theme.shadows[2]
//             }}>
//               <img
//                 src="/kotedzi.png"
//                 alt={t.title}
//                 style={{
//                   width: '100%',
//                   height: '100%',
//                   objectFit: 'cover',
//                   objectPosition: 'center'
//                 }}
//               />
//             </Box>

//             <Typography variant="h6" component="p" sx={{
//               textAlign: 'center',
//               color: 'text.secondary',
//               mb: 4,
//               fontSize: isMobile ? '1rem' : '1.1rem'
//             }}>
//               {t.subtitle}
//             </Typography>

//             <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
//               <Typography variant="h5" component="h3" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.intro.split(':')[0]}
//               </Typography>
//               <Typography>
//                 {t.intro.split(':')[1]}
//               </Typography>
//             </Box>

//             <Box sx={{ mb: 4 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Groups fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.benefitsTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.benefits.map((item, index) => (
//                   <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>

//               <Box sx={{ 
//                 display: 'flex', 
//                 flexWrap: 'wrap', 
//                 gap: 1, 
//                 mt: 3,
//                 justifyContent: 'center'
//               }}>
//                 {t.features.map((feature, index) => (
//                   <Chip 
//                     key={`feature-${index}`}
//                     icon={feature.icon} 
//                     label={feature.label} 
//                     size={isMobile ? 'small' : 'medium'}
//                     sx={{ 
//                       '& .MuiChip-icon': { color: 'primary.main' },
//                       backgroundColor: 'background.paper'
//                     }}
//                   />
//                 ))}
//               </Box>
//             </Box>

//             <Box sx={{ mb: 4 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Celebration fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.typesTitle}
//               </Typography>
              
//               <Grid container spacing={3}>
//                 {t.types.map((type, index) => (
//                   <Grid item xs={12} sm={6} key={`type-${index}`}>
//                     <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
//                       <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
//                         {React.cloneElement(type.icon, { 
//                           color: 'primary',
//                           fontSize: isMobile ? 'medium' : 'large'
//                         })}
//                         <Typography variant="h6" sx={{ color: 'primary.main' }}>
//                           {type.name}
//                         </Typography>
//                       </Box>
//                       <Typography variant="body2" sx={{ mb: 2 }}>
//                         {type.desc}
//                       </Typography>
//                       <List dense>
//                         {type.features.map((feature, idx) => (
//                           <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
//                             <ListItemIcon sx={{ minWidth: 32 }}>
//                               <CheckCircle fontSize="small" color="secondary" />
//                             </ListItemIcon>
//                             <Typography variant="body2">
//                               {feature}
//                             </Typography>
//                           </ListItem>
//                         ))}
//                       </List>
//                     </Paper>
//                   </Grid>
//                 ))}
//               </Grid>
//             </Box>

//             <Box sx={{ mb: 3, mt: 10 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Groups fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.tipsTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.tips.map((item, index) => (
//                   <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>
//             </Box>
//           </Paper>
//           <RelatedPosts currentSlug="cottageComplexGuide" />
//           <Box sx={{ textAlign: 'center', mt: 2 }}>
//             <Link href="/blog" passHref legacyBehavior>
//               <Button 
//                 variant="contained" 
//                 color="primary"
//                 size={isMobile ? 'medium' : 'large'}
//                 startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
//                 sx={{ 
//                   px: isMobile ? 3 : 4,
//                   py: 1,
//                   fontWeight: 600,
//                   fontSize: isMobile ? '0.9rem' : '1rem',
//                   borderRadius: 2
//                 }}
//               >
//                 {t.backButton}
//               </Button>
//             </Link>
//           </Box>
//         </Container>
//         <Footer />
//       </Box>
//     </>
//   )
// }

// export default function CottageComplexPage() {
//   return (
//     <Provider store={store}>
//       <LanguageProvider>
//         <CottageComplexGuide />
//       </LanguageProvider>
//     </Provider>
//   )
// }




'use client'

import React from 'react'
import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid, Divider } from '@mui/material'
import Link from 'next/link'
import { Home, Groups, Celebration, Restaurant, Pool, Nature, CheckCircle, ArrowBack, OutdoorGrill } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'
import RelatedPosts from './components/RelatedPosts'

const COTTAGE_COMPLEX_CONTENT = {
  ua: {
    title: "–ö–æ—Ç–µ–¥–∂–Ω—ñ –º—ñ—Å—Ç–µ—á–∫–∞ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π",
    metaDescription: "üîù –û—Ä–µ–Ω–¥–∞ –∫–æ—Ç–µ–¥–∂–Ω–∏—Ö –º—ñ—Å—Ç–µ—á–æ–∫ –¥–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ñ–≤ —Ç–∞ –≤–µ–ª–∏–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π. –ü–æ–≤–Ω–∏–π –∫–æ–º—Ñ–æ—Ä—Ç —Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å.",
    subtitle: "–ü–µ—Ä–µ–≤–∞–≥–∏ –æ—Ä–µ–Ω–¥–∏ —Ü—ñ–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å—É –¥–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç",
    intro: "–û—Ä–µ–Ω–¥–∞ —Ü—ñ–ª–æ–≥–æ –∫–æ—Ç–µ–¥–∂–Ω–æ–≥–æ –º—ñ—Å—Ç–µ—á–∫–∞ - —ñ–¥–µ–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤ –∞–±–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –∑ –¥—Ä—É–∑—è–º–∏. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –ø–æ–≤–Ω—É –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å —Ç–∞ –≤—Å—ñ –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –¥–ª—è –Ω–µ–∑–∞–±—É—Ç–Ω—å–æ–≥–æ —Å–≤—è—Ç–∞.",
    benefitsTitle: "–ß–æ–º—É –≤–∞—Ä—Ç–æ –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ —Ü—ñ–ª–∏–π –∫–æ–º–ø–ª–µ–∫—Å?",
    benefits: [
      "–ü–æ–≤–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ—Å—Ç—å —Ç–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω—ñ—Ö",
      "–í–ª–∞—Å–Ω–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–±–∞—Å–µ–π–Ω–∏, –º–∞–Ω–≥–∞–ª—å–Ω—ñ –∑–æ–Ω–∏, —Å–ø–æ—Ä—Ç–º–∞–π–¥–∞–Ω—á–∏–∫–∏)",
      "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –≤—Å—ñ—Ö –≥–æ—Å—Ç–µ–π —Ä–∞–∑–æ–º",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª, —è–∫–∏–π –ø–æ–¥–±–∞—î –ø—Ä–æ –≤–∞—à –∫–æ–º—Ñ–æ—Ä—Ç",
      "–ì–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –æ—Ä–µ–Ω–¥–∏ —Ç–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥"
    ],
    typesTitle: "–í–∞—Ä—ñ–∞–Ω—Ç–∏ –∫–æ—Ç–µ–¥–∂–Ω–∏—Ö –º—ñ—Å—Ç–µ—á–æ–∫",
    types: [
      {
        name: "–î–ª—è —Å—ñ–º–µ–π–Ω–∏—Ö —Å–≤—è—Ç",
        desc: "–Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –≤–µ—Å—ñ–ª—å, —é–≤—ñ–ª–µ—ó–≤ —Ç–∞ —Ä–æ–¥–∏–Ω–Ω–∏—Ö –∑–±–æ—Ä—ñ–≤",
        features: ["–í–µ–ª–∏–∫—ñ –∑–∞–ª–∏", "–õ—ñ—Ç–Ω—ñ —Ç–µ—Ä–∞—Å–∏", "–î–∏—Ç—è—á—ñ –º–∞–π–¥–∞–Ω—á–∏–∫–∏"],
        icon: <Celebration />
      },
      {
        name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫",
        desc: "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –∫–æ–º–ø–ª–µ–∫—Å–∏ –¥–ª—è —Ç–∏–º–±—É–ª–¥–∏–Ω–≥—É —Ç–∞ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –∫–æ–ª–µ–∫—Ç–∏–≤—É",
        features: ["–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª–∏", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ –º–∞–π–¥–∞–Ω—á–∏–∫–∏", "SPA-–∑–æ–Ω–∏"],
        icon: <Groups />
      },
      {
        name: "–í—ñ–¥–ø–æ—á–∏–Ω–æ–∫ –∑ –¥—Ä—É–∑—è–º–∏",
        desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –º—ñ—Å—Ç–µ—á–∫–∞ –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ–π –¥—Ä—É–∑—ñ–≤",
        features: ["–ö—ñ–Ω–æ—Ç–µ–∞—Ç—Ä–∏", "–ë—ñ–ª—å—è—Ä–¥–Ω—ñ", "–õ—ñ—Ç–Ω—ñ –∫—É—Ö–Ω—ñ"],
        icon: <Home />
      }
    ],
    tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å?",
    tips: [
      "–í–∏–∑–Ω–∞—á—Ç–µ —Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π –¥–ª—è —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è",
      "–ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–æ–Ω (—Å–≤—è—Ç–∫–æ–≤–∞, —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è, –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É)",
      "–£—Ç–æ—á–Ω—ñ—Ç—å, —á–∏ –≤–∫–ª—é—á–µ–Ω–æ –≤ –æ—Ä–µ–Ω–¥—É –æ–±—Å–ª—É–≥–æ–≤—É—é—á–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª",
      "–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü–µ –∑ –≥–∞—Ä–Ω–∏–º–∏ –ø–µ–π–∑–∞–∂–∞–º–∏ –¥–ª—è —Ñ–æ—Ç–æ–∑–π–æ–º–∫–∏",
      "–ó–∞–º–æ–≤—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å (–∫–µ–π—Ç–µ—Ä–∏–Ω–≥, –¥–µ–∫–æ—Ä, –∞–Ω—ñ–º–∞—Ç–æ—Ä–∏)"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
    features: [
      { icon: <Home />, label: "–í–µ–ª–∏–∫—ñ –∫–æ—Ç–µ–¥–∂—ñ" },
      { icon: <Pool />, label: "–ë–∞—Å–µ–π–Ω–∏" },
      { icon: <OutdoorGrill />, label: "–ú–∞–Ω–≥–∞–ª—å–Ω—ñ –∑–æ–Ω–∏" },
      { icon: <Restaurant />, label: "–†–µ—Å—Ç–æ—Ä–∞–Ω–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è" },
      { icon: <Nature />, label: "–ñ–∏–≤–æ–ø–∏—Å–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó" }
    ]
  },
  ru: {
    title: "–ö–æ—Ç—Ç–µ–¥–∂–Ω—ã–µ –≥–æ—Ä–æ–¥–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π",
    metaDescription: "üîù –ê—Ä–µ–Ω–¥–∞ –∫–æ—Ç—Ç–µ–¥–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–∫–æ–≤ –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–æ–≤ –∏ –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π. –ü–æ–ª–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å.",
    subtitle: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∞—Ä–µ–Ω–¥—ã —Ü–µ–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
    intro: "–ê—Ä–µ–Ω–¥–∞ —Ü–µ–ª–æ–≥–æ –∫–æ—Ç—Ç–µ–¥–∂–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∫–∞ - –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–ª–∏ –æ—Ç–¥—ã—Ö–∞ —Å –¥—Ä—É–∑—å—è–º–∏. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–ª–Ω—É—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –≤—Å–µ —É–¥–æ–±—Å—Ç–≤–∞ –¥–ª—è –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞.",
    benefitsTitle: "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Ü–µ–ª—ã–π –∫–æ–º–ø–ª–µ–∫—Å?",
    benefits: [
      "–ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö",
      "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–±–∞—Å—Å–µ–π–Ω—ã, –º–∞–Ω–≥–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã, —Å–ø–æ—Ä—Ç–ø–ª–æ—â–∞–¥–∫–∏)",
      "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –≥–æ—Å—Ç–µ–π –≤–º–µ—Å—Ç–µ",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –≤–∞—à–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ",
      "–ì–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è –∞—Ä–µ–Ω–¥—ã –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥"
    ],
    typesTitle: "–í–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ—Ç—Ç–µ–¥–∂–Ω—ã—Ö –≥–æ—Ä–æ–¥–∫–æ–≤",
    types: [
      {
        name: "–î–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
        desc: "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–≤–∞–¥–µ–±, —é–±–∏–ª–µ–µ–≤ –∏ —Å–µ–º–µ–π–Ω—ã—Ö —Å–±–æ—Ä–æ–≤",
        features: ["–ë–æ–ª—å—à–∏–µ –∑–∞–ª—ã", "–õ–µ—Ç–Ω–∏–µ —Ç–µ—Ä—Ä–∞—Å—ã", "–î–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏"],
        icon: <Celebration />
      },
      {
        name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö",
        desc: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã –¥–ª—è —Ç–∏–º–±–∏–ª–¥–∏–Ω–≥–∞ –∏ –æ—Ç–¥—ã—Ö–∞ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞",
        features: ["–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª—ã", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏", "SPA-–∑–æ–Ω—ã"],
        icon: <Groups />
      },
      {
        name: "–û—Ç–¥—ã—Ö —Å –¥—Ä—É–∑—å—è–º–∏",
        desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –≥–æ—Ä–æ–¥–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π –¥—Ä—É–∑–µ–π",
        features: ["–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã", "–ë–∏–ª—å—è—Ä–¥–Ω—ã–µ", "–õ–µ—Ç–Ω–∏–µ –∫—É—Ö–Ω–∏"],
        icon: <Home />
      }
    ],
    tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å?",
    tips: [
      "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è",
      "–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–æ–Ω (–ø—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è, –ø–∏—Ç–∞–Ω–∏—è, –æ—Ç–¥—ã—Ö–∞)",
      "–£—Ç–æ—á–Ω–∏—Ç–µ, –≤–∫–ª—é—á–µ–Ω –ª–∏ –≤ –∞—Ä–µ–Ω–¥—É –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª",
      "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –ø–µ–π–∑–∞–∂–∞–º–∏ –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏",
      "–ó–∞–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∑–∞—Ä–∞–Ω–µ–µ (–∫–µ–π—Ç–µ—Ä–∏–Ω–≥, –¥–µ–∫–æ—Ä, –∞–Ω–∏–º–∞—Ç–æ—Ä—ã)"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
    features: [
      { icon: <Home />, label: "–ë–æ–ª—å—à–∏–µ –∫–æ—Ç—Ç–µ–¥–∂–∏" },
      { icon: <Pool />, label: "–ë–∞—Å—Å–µ–π–Ω—ã" },
      { icon: <OutdoorGrill />, label: "–ú–∞–Ω–≥–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã" },
      { icon: <Restaurant />, label: "–†–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ" },
      { icon: <Nature />, label: "–ñ–∏–≤–æ–ø–∏—Å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏" }
    ]
  }
}

function CottageComplexGuide() {
  const { currentLanguage } = useLanguage()
  const t = COTTAGE_COMPLEX_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/kotedzi.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
                loading="eager" // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
              <Typography variant="h5" component="h3" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.intro.split(':')[0]}
              </Typography>
              <Typography>
                {t.intro.split(':')[1]}
              </Typography>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Groups fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.benefitsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.benefits.map((item, index) => (
                  <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                {t.features.map((feature, index) => (
                  <Chip 
                    key={`feature-${index}`}
                    icon={feature.icon} 
                    label={feature.label} 
                    size={isMobile ? 'small' : 'medium'}
                    sx={{ 
                      '& .MuiChip-icon': { color: 'primary.main' },
                      backgroundColor: 'background.paper'
                    }}
                  />
                ))}
              </Box>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Celebration fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.typesTitle}
              </Typography>
              
              <Grid container spacing={3}>
                {t.types.map((type, index) => (
                  <Grid item xs={12} sm={6} key={`type-${index}`}>
                    <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                        {React.cloneElement(type.icon, { 
                          color: 'primary',
                          fontSize: isMobile ? 'medium' : 'large'
                        })}
                        <Typography variant="h6" sx={{ color: 'primary.main' }}>
                          {type.name}
                        </Typography>
                      </Box>
                      <Typography variant="body2" sx={{ mb: 2 }}>
                        {type.desc}
                      </Typography>
                      <List dense>
                        {type.features.map((feature, idx) => (
                          <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
                            <ListItemIcon sx={{ minWidth: 32 }}>
                              <CheckCircle fontSize="small" color="secondary" />
                            </ListItemIcon>
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          </ListItem>
                        ))}
                      </List>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 3, mt: 10 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Groups fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>

          {/* –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          <Divider sx={{ my: 4 }} />
          
          {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ */}
          <RelatedPosts currentSlug="cottageComplexGuide" />

          <Box sx={{ textAlign: 'center', mt: 4 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏
export async function getStaticProps() {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  // –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  
  return {
    props: {
      // –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞–∫ –ø—Ä–æ–ø—Å—ã
      generatedAt: new Date().toISOString(),
    },
    // –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    revalidate: 86400, // 24 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  }
}

export default function CottageComplexPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <CottageComplexGuide />
      </LanguageProvider>
    </Provider>
  )
}