'use client'

import React from 'react'
import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
import Link from 'next/link'
import { Workspaces, Wifi, Coffee, MeetingRoom, Event, Pets, LocalCafe, Print, Lock, ArrowBack, CheckCircle  } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'
import RelatedPosts from './components/RelatedPosts'

const COWORKING_CONTENT = {
  ua: {
    title: "–ö–æ–≤–æ—Ä–∫—ñ–Ω–≥ - —Ä–æ–±–æ—á—ñ –ø—Ä–æ—Å—Ç–æ—Ä–∏ –¥–ª—è digital-–∫–æ—á—ñ–≤–Ω–∏–∫—ñ–≤",
    metaDescription: "üîù –°—É—á–∞—Å–Ω—ñ –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥–∏ –∑ —É—Å—ñ–º–∞ –∑—Ä—É—á–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —Ñ—Ä—ñ–ª–∞–Ω—Å–µ—Ä—ñ–≤ —Ç–∞ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤. –®–≤–∏–¥–∫–∏–π —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –∑–æ–Ω–∏ —Ç–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∞.",
    subtitle: "–Ü–¥–µ–∞–ª—å–Ω—ñ —É–º–æ–≤–∏ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–±–æ—Ç–∏",
    intro: "–°—É—á–∞—Å–Ω–∏–π –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥ - —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–æ–±–æ—á–µ –º—ñ—Å—Ü–µ, –∞ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –¥–ª—è —Ç–≤–æ—Ä—á–æ—Å—Ç—ñ —Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —Ç–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –æ–¥–Ω–æ–¥—É–º—Ü—è–º–∏.",
    benefitsTitle: "–ß–æ–º—É –≤–∞—Ä—Ç–æ –æ–±—Ä–∞—Ç–∏ –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥?",
    benefits: [
      "–°—Ç–∞–±—ñ–ª—å–Ω–∏–π —à–≤–∏–¥–∫—ñ—Å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç",
      "–ï—Ä–≥–æ–Ω–æ–º—ñ—á–Ω—ñ —Ä–æ–±–æ—á—ñ –º—ñ—Å—Ü—è",
      "–ó–æ–Ω–∏ –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —Ç–∞ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π",
      "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–µ—Ç–≤–æ—Ä–∫—ñ–Ω–≥—É –∑ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª–∞–º–∏",
      "–ì–Ω—É—á–∫—ñ —Ç–∞—Ä–∏—Ñ–Ω—ñ –ø–ª–∞–Ω–∏ (–≥–æ–¥–∏–Ω–Ω—ñ, –¥–µ–Ω–Ω—ñ, –º—ñ—Å—è—á–Ω—ñ)"
    ],
    typesTitle: "–¢–∏–ø–∏ —Ä–æ–±–æ—á–∏—Ö –∑–æ–Ω —É –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥—É",
    types: [
      {
        name: "Open-space –∑–æ–Ω–∏",
        desc: "–í—ñ–¥–∫—Ä–∏—Ç—ñ –ø—Ä–æ—Å—Ç–æ—Ä–∏ –∑ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏–º–∏ —Ä–æ–±–æ—á–∏–º–∏ –º—ñ—Å—Ü—è–º–∏",
        features: ["–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ —Å—Ç–æ–ª–∏", "–†–æ–∑–µ—Ç–∫–∏ –ø–æ–±–ª–∏–∑—É", "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–µ –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è"],
        icon: <Workspaces />
      },
      {
        name: "–ü—Ä–∏–≤–∞—Ç–Ω—ñ –∫–∞–±—ñ–Ω–µ—Ç–∏",
        desc: "–ó–∞–∫—Ä–∏—Ç—ñ –ø—Ä–æ—Å—Ç–æ—Ä–∏ –¥–ª—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ—ó –∞–±–æ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–æ–±–æ—Ç–∏",
        features: ["–ó–≤—É–∫–æ—ñ–∑–æ–ª—è—Ü—ñ—è", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è", "–î–æ—Å—Ç—É–ø 24/7"],
        icon: <MeetingRoom />
      },
      {
        name: "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ñ –∫—ñ–º–Ω–∞—Ç–∏",
        desc: "–ó–æ–Ω–∏ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –∑—É—Å—Ç—Ä—ñ—á–µ–π —Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π",
        features: ["–ü—Ä–æ–µ–∫—Ç–æ—Ä", "–ú–∞—Ä–∫–µ—Ä–Ω—ñ –¥–æ—à–∫–∏", "–í—ñ–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó"],
        icon: <Event />
      }
    ],
    tipsTitle: "–Ø–∫ –æ–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –∫–æ–≤–æ—Ä–∫—ñ–Ω–≥?",
    tips: [
      "–í–∏–∑–Ω–∞—á—Ç–µ —Å–≤—ñ–π –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ (—Ä–∞–Ω–∫–æ–≤–∏–π, –¥–µ–Ω–Ω–∏–π, –Ω—ñ—á–Ω–∏–π)",
      "–ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è —Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å",
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ—Å–ª—É–≥ (–¥—Ä—É–∫, —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è, –∫–∞–≤–∞)",
      "–û—Ü—ñ–Ω—ñ—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Ç–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç—É",
      "–°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –ø—Ä–æ–±–Ω–∏–º –¥–Ω–µ–º –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ—é –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
    features: [
      { icon: <Wifi />, label: "–®–≤–∏–¥–∫—ñ—Å–Ω–∏–π Wi-Fi" },
      { icon: <Coffee />, label: "–ë–µ–∑–ª—ñ–º—ñ—Ç–Ω–∞ –∫–∞–≤–∞" },
      { icon: <LocalCafe />, label: "–ö—É—Ö–æ–Ω–Ω–∞ –∑–æ–Ω–∞" },
      { icon: <Print />, label: "–û—Ñ—ñ—Å–Ω–∞ —Ç–µ—Ö–Ω—ñ–∫–∞" },
      { icon: <Pets />, label: "Pet-friendly" }
    ]
  },
  ru: {
    title: "–ö–æ–≤–æ—Ä–∫–∏–Ω–≥ - —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è digital-–∫–æ—á–µ–≤–Ω–∏–∫–æ–≤",
    metaDescription: "üîù –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–∏ —Å–æ –≤—Å–µ–º–∏ —É–¥–æ–±—Å—Ç–≤–∞–º–∏ –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ –∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤. –ë—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –∑–æ–Ω—ã –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ.",
    subtitle: "–ò–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
    intro: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ, –∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—â–µ–Ω–∏—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏.",
    benefitsTitle: "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∫–æ–≤–æ—Ä–∫–∏–Ω–≥?",
    benefits: [
      "–°—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç",
      "–≠—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–µ —Ä–∞–±–æ—á–∏–µ –º–µ—Å—Ç–∞",
      "–ó–æ–Ω—ã –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á",
      "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–∞ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏",
      "–ì–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã (–ø–æ—á–∞—Å–æ–≤—ã–µ, –¥–Ω–µ–≤–Ω—ã–µ, –º–µ—Å—è—á–Ω—ã–µ)"
    ],
    typesTitle: "–¢–∏–ø—ã —Ä–∞–±–æ—á–∏—Ö –∑–æ–Ω –≤ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–µ",
    types: [
      {
        name: "Open-space –∑–æ–Ω—ã",
        desc: "–û—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ —Ä–∞–±–æ—á–∏–º–∏ –º–µ—Å—Ç–∞–º–∏",
        features: ["–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å—Ç–æ–ª—ã", "–†–æ–∑–µ—Ç–∫–∏ —Ä—è–¥–æ–º", "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"],
        icon: <Workspaces />
      },
      {
        name: "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã",
        desc: "–ó–∞–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
        features: ["–ó–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏—è", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", "–î–æ—Å—Ç—É–ø 24/7"],
        icon: <MeetingRoom />
      },
      {
        name: "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã",
        desc: "–ó–æ–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π",
        features: ["–ü—Ä–æ–µ–∫—Ç–æ—Ä", "–ú–∞—Ä–∫–µ—Ä–Ω—ã–µ –¥–æ—Å–∫–∏", "–í–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏"],
        icon: <Event />
      }
    ],
    tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–≤–æ—Ä–∫–∏–Ω–≥?",
    tips: [
      "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–≤–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã (—É—Ç—Ä–µ–Ω–Ω–∏–π, –¥–Ω–µ–≤–Ω–æ–π, –Ω–æ—á–Ω–æ–π)",
      "–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å",
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ (–ø–µ—á–∞—Ç—å, —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ—Ñ–µ)",
      "–û—Ü–µ–Ω–∏—Ç–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ",
      "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–æ–±–Ω—ã–º –¥–Ω–µ–º –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
    features: [
      { icon: <Wifi />, label: "–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π Wi-Fi" },
      { icon: <Coffee />, label: "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –∫–æ—Ñ–µ" },
      { icon: <LocalCafe />, label: "–ö—É—Ö–æ–Ω–Ω–∞—è –∑–æ–Ω–∞" },
      { icon: <Print />, label: "–û—Ñ–∏—Å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞" },
      { icon: <Pets />, label: "Pet-friendly" }
    ]
  }
}

function CoworkingGuide() {
  const { currentLanguage } = useLanguage()
  const t = COWORKING_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/kavorking.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
              <Typography variant="h5" component="h3" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Workspaces fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.intro.split('.')[0]}.
              </Typography>
              <Typography>
                {t.intro.split('.').slice(1).join('.')}.
              </Typography>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Wifi fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.benefitsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.benefits.map((item, index) => (
                  <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                {t.features.map((feature, index) => (
                  <Chip 
                    key={`feature-${index}`}
                    icon={feature.icon} 
                    label={feature.label} 
                    size={isMobile ? 'small' : 'medium'}
                    sx={{ 
                      '& .MuiChip-icon': { color: 'primary.main' },
                      backgroundColor: 'background.paper'
                    }}
                  />
                ))}
              </Box>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <MeetingRoom fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.typesTitle}
              </Typography>
              
              <Grid container spacing={3}>
                {t.types.map((type, index) => (
                  <Grid item xs={12} sm={6} key={`type-${index}`}>
                    <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                        {React.cloneElement(type.icon, { 
                          color: 'primary',
                          fontSize: isMobile ? 'medium' : 'large'
                        })}
                        <Typography variant="h6" sx={{ color: 'primary.main' }}>
                          {type.name}
                        </Typography>
                      </Box>
                      <Typography variant="body2" sx={{ mb: 2 }}>
                        {type.desc}
                      </Typography>
                      <List dense>
                        {type.features.map((feature, idx) => (
                          <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
                            <ListItemIcon sx={{ minWidth: 32 }}>
                              <CheckCircle fontSize="small" color="secondary" />
                            </ListItemIcon>
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          </ListItem>
                        ))}
                      </List>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 3, mt: 10 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Lock fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>
          <RelatedPosts currentSlug="coworkingGuide" />
          <Box sx={{ textAlign: 'center', mt: 2 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

export default function CoworkingPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <CoworkingGuide />
      </LanguageProvider>
    </Provider>
  )
}