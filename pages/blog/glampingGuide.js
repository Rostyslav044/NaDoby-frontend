



// 'use client'

// import React from 'react'
// import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
// import Header from "@/app/components/Header"
// import { store } from "@/app/store"
// import { Provider } from "react-redux"
// import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
// import Link from 'next/link'
// import { Home, Nature, FamilyRestroom, Pets, CheckCircle, ArrowBack, LocalFireDepartment, OutdoorGrill, AcUnit } from '@mui/icons-material'
// import Footer from "@/app/components/Footer"
// import Head from 'next/head'

// const GLAMPING_CONTENT = {
//   ua: {
//     title: "–ì–ª–µ–º–ø—ñ–Ω–≥: —Ä–æ–∑–∫—ñ—à —Å–µ—Ä–µ–¥ –ø—Ä–∏—Ä–æ–¥–∏",
//     metaDescription: "üîù –ù–∞–π–∫—Ä–∞—â—ñ –≥–ª–µ–º–ø—ñ–Ω–≥ –ª–æ–∫–∞—Ü—ñ—ó –£–∫—Ä–∞—ó–Ω–∏. –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –Ω–∞–º–µ—Ç–∏ –∑ —É—Å—ñ–º–∞ –∑—Ä—É—á–Ω–æ—Å—Ç—è–º–∏ —Å–µ—Ä–µ–¥ –¥–∏–∫–æ—ó –ø—Ä–∏—Ä–æ–¥–∏.",
//     subtitle: "–¢–æ–ø-5 –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏—Ö –≥–ª–µ–º–ø—ñ–Ω–≥ –ª–æ–∫–∞—Ü—ñ–π –≤ –£–∫—Ä–∞—ó–Ω—ñ",
//     conceptTitle: "–©–æ —Ç–∞–∫–µ –≥–ª–µ–º–ø—ñ–Ω–≥?",
//     concept: "–ì–ª–µ–º–ø—ñ–Ω–≥ (glamorous + camping) - —Ü–µ –∫–µ–º–ø—ñ–Ω–≥ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–æ–∑–∫–æ—à—ñ, –¥–µ –≤–∏ –Ω–∞—Å–æ–ª–æ–¥–∂—É—î—Ç–µ—Å—å –ø—Ä–∏—Ä–æ–¥–æ—é, –Ω–µ –≤—ñ–¥–º–æ–≤–ª—è—é—á–∏—Å—å –≤—ñ–¥ –∫–æ–º—Ñ–æ—Ä—Ç—É.",
//     benefitsTitle: "–ü–µ—Ä–µ–≤–∞–≥–∏ –≥–ª–µ–º–ø—ñ–Ω–≥—É",
//     benefits: [
//       "–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó —Å–µ—Ä–µ–¥ –Ω–µ—Ç—Ä—ñ–ø–Ω–æ—ó –ø—Ä–∏—Ä–æ–¥–∏",
//       "–ü–æ–≤–Ω–æ—Ü—ñ–Ω–Ω—ñ –ª—ñ–∂–∫–∞ —Ç–∞ –∑—Ä—É—á–Ω—ñ –º–µ–±–ª—ñ",
//       "–û—Å–æ–±–ª–∏–≤–∏–π —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∏–π –∞–Ω—Ç—É—Ä–∞–∂",
//       "–ï–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫",
//       "–ü–µ—Ä—Å–æ–Ω–∞–ª —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏"
//     ],
//     locationsTitle: "–¢–æ–ø-5 –≥–ª–µ–º–ø—ñ–Ω–≥ –ª–æ–∫–∞—Ü—ñ–π –£–∫—Ä–∞—ó–Ω–∏",
//     locations: [
//       {
//         name: "–ö–∞—Ä–ø–∞—Ç—Å—å–∫–µ –Ω–µ–±–æ",
//         desc: "–ù–∞–º–µ—Ç–∏ –Ω–∞ –≤–∏—Å–æ—Ç—ñ 1200–º –∑ –ø–∞–Ω–æ—Ä–∞–º–Ω–∏–º –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä–∏",
//         features: ["–î–∂–∞–∫—É–∑—ñ –ø—ñ–¥ –≤—ñ–¥–∫—Ä–∏—Ç–∏–º –Ω–µ–±–æ–º", "–ö–∞–≤'—è—Ä–Ω—è –Ω–∞ —Ç–µ—Ä–∞—Å—ñ"],
//         icon: <Nature />
//       },
//       {
//         name: "–õ—ñ—Å–æ–≤–∏–π –≥–ª–∞–º–ø—ñ–Ω–≥",
//         desc: "–†–æ–∑–∫—ñ—à–Ω—ñ –Ω–∞–º–µ—Ç–∏ —Å–µ—Ä–µ–¥ —Å—Ç–æ–ª—ñ—Ç–Ω—ñ—Ö –¥–µ—Ä–µ–≤",
//         features: ["–ö–∞–º—ñ–Ω —É –Ω–∞–º–µ—Ç—ñ", "–ï–∫—Å–∫—É—Ä—Å—ñ—ó –∑ –ª—ñ—Å–Ω–∏–∫–æ–º"],
//         icon: <Nature />
//       },
//       {
//         name: "–û–∑–µ—Ä–Ω–∏–π –≥–ª–∞–º–ø—ñ–Ω–≥",
//         desc: "–ù–∞–º–µ—Ç–∏ –Ω–∞ –ø–∞–ª—è—Ö –Ω–∞–¥ –≤–æ–¥–æ—é",
//         features: ["–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Ä–∏–±–æ–ª–æ–≤–ª—ñ", "–°–Ω—ñ–¥–∞–Ω–æ–∫ –Ω–∞ –ø–ª–æ—Ç—É"],
//         icon: <AcUnit />
//       },
//       {
//         name: "–°—Ç–µ–ø–æ–≤—ñ –≤—ñ—Ç—Ä–∏–ª–∞",
//         desc: "–ù–∞–º–µ—Ç–∏ —É —Ñ–æ—Ä–º—ñ –≤—ñ—Ç—Ä–∏–ª —Å–µ—Ä–µ–¥ —Å—Ç–µ–ø—ñ–≤",
//         features: ["–°–ø–æ–≥–ª—è–¥–∞–Ω–Ω—è –∑—ñ—Ä", "–î–µ–≥—É—Å—Ç–∞—Ü—ñ—è –≤–∏–Ω"],
//         icon: <Nature />
//       },
//       {
//         name: "–ö–∞–Ω—å–π–æ–Ω –†–æ–∑–∫–æ—à—ñ",
//         desc: "–ù–∞–º–µ—Ç–∏ –Ω–∞ –∫—Ä–∞—é –∫–∞–Ω—å–π–æ–Ω—É",
//         features: ["–°—Ö–æ–¥–∏ –¥–æ —Ä—ñ—á–∫–∏", "–ô–æ–≥–∞ –Ω–∞ —Å—Ö–∏–ª–∞—Ö"],
//         icon: <Nature />
//       }
//     ],
//     tipsTitle: "–Ø–∫ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—å –¥–æ –≥–ª–µ–º–ø—ñ–Ω–≥—É?",
//     tips: [
//       "–í—ñ–∑—å–º—ñ—Ç—å —Ç–µ–ø–ª–∏–π –æ–¥—è–≥ - –≤–Ω–æ—á—ñ –º–æ–∂–µ –±—É—Ç–∏ –ø—Ä–æ—Ö–æ–ª–æ–¥–Ω–æ",
//       "–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Ñ–æ—Ç–æ–∞–ø–∞—Ä–∞—Ç –¥–ª—è –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏—Ö –∫–∞–¥—Ä—ñ–≤",
//       "–£—Ç–æ—á–Ω—ñ—Ç—å –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ä–æ–∑–µ—Ç–æ–∫ —É –Ω–∞–º–µ—Ç—ñ",
//       "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π —Å–µ–∑–æ–Ω (—Ç—Ä–∞–≤–µ–Ω—å-–≤–µ—Ä–µ—Å–µ–Ω—å)",
//       "–ó–∞–º–æ–≤—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å"
//     ],
//     backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
//     features: [
//       { icon: <Home />, label: "–†–æ–∑–∫—ñ—à–Ω—ñ –Ω–∞–º–µ—Ç–∏" },
//       { icon: <Nature />, label: "–ü—Ä–∏—Ä–æ–¥–∞" },
//       { icon: <FamilyRestroom />, label: "–î–ª—è —Å—ñ–º–µ–π" },
//       { icon: <Pets />, label: "Pet-friendly" },
//       { icon: <LocalFireDepartment />, label: "–ú–∞–Ω–≥–∞–ª" }
//     ]
//   },
//   ru: {
//     title: "–ì–ª—ç–º–ø–∏–Ω–≥: —Ä–æ—Å–∫–æ—à—å —Å—Ä–µ–¥–∏ –ø—Ä–∏—Ä–æ–¥—ã",
//     metaDescription: "üîù –õ—É—á—à–∏–µ –≥–ª—ç–º–ø–∏–Ω–≥ –ª–æ–∫–∞—Ü–∏–∏ –£–∫—Ä–∞–∏–Ω—ã. –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –ø–∞–ª–∞—Ç–∫–∏ —Å–æ –≤—Å–µ–º–∏ —É–¥–æ–±—Å—Ç–≤–∞–º–∏ —Å—Ä–µ–¥–∏ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã.",
//     subtitle: "–¢–æ–ø-5 –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –≥–ª—ç–º–ø–∏–Ω–≥ –ª–æ–∫–∞—Ü–∏–π –≤ –£–∫—Ä–∞–∏–Ω–µ",
//     conceptTitle: "–ß—Ç–æ —Ç–∞–∫–æ–µ –≥–ª—ç–º–ø–∏–Ω–≥?",
//     concept: "–ì–ª—ç–º–ø–∏–Ω–≥ (glamorous + camping) - —ç—Ç–æ –∫–µ–º–ø–∏–Ω–≥ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–æ—Å–∫–æ—à–∏, –≥–¥–µ –≤—ã –Ω–∞—Å–ª–∞–∂–¥–∞–µ—Ç–µ—Å—å –ø—Ä–∏—Ä–æ–¥–æ–π, –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞—è—Å—å –æ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–∞.",
//     benefitsTitle: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≥–ª—ç–º–ø–∏–Ω–≥–∞",
//     benefits: [
//       "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ —Å—Ä–µ–¥–∏ –Ω–µ—Ç—Ä–æ–Ω—É—Ç–æ–π –ø—Ä–∏—Ä–æ–¥—ã",
//       "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –∫—Ä–æ–≤–∞—Ç–∏ –∏ —É–¥–æ–±–Ω–∞—è –º–µ–±–µ–ª—å",
//       "–û—Å–æ–±—ã–π —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω—Ç—É—Ä–∞–∂",
//       "–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –æ—Ç–¥—ã—Ö",
//       "–ü–µ—Ä—Å–æ–Ω–∞–ª –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"
//     ],
//     locationsTitle: "–¢–æ–ø-5 –≥–ª—ç–º–ø–∏–Ω–≥ –ª–æ–∫–∞—Ü–∏–π –£–∫—Ä–∞–∏–Ω—ã",
//     locations: [
//       {
//         name: "–ö–∞—Ä–ø–∞—Ç—Å–∫–æ–µ –Ω–µ–±–æ",
//         desc: "–ü–∞–ª–∞—Ç–∫–∏ –Ω–∞ –≤—ã—Å–æ—Ç–µ 1200–º —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä—ã",
//         features: ["–î–∂–∞–∫—É–∑–∏ –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º", "–ö–æ—Ñ–µ–π–Ω—è –Ω–∞ —Ç–µ—Ä—Ä–∞—Å–µ"],
//         icon: <Nature />
//       },
//       {
//         name: "–õ–µ—Å–Ω–æ–π –≥–ª–∞–º–ø–∏–Ω–≥",
//         desc: "–†–æ—Å–∫–æ—à–Ω—ã–µ –ø–∞–ª–∞—Ç–∫–∏ —Å—Ä–µ–¥–∏ –≤–µ–∫–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤",
//         features: ["–ö–∞–º–∏–Ω –≤ –ø–∞–ª–∞—Ç–∫–µ", "–≠–∫—Å–∫—É—Ä—Å–∏–∏ —Å –ª–µ—Å–Ω–∏–∫–æ–º"],
//         icon: <Nature />
//       },
//       {
//         name: "–û–∑–µ—Ä–Ω—ã–π –≥–ª–∞–º–ø–∏–Ω–≥",
//         desc: "–ü–∞–ª–∞—Ç–∫–∏ –Ω–∞ —Å–≤–∞—è—Ö –Ω–∞–¥ –≤–æ–¥–æ–π",
//         features: ["–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—ã–±–∞–ª–∫–∏", "–ó–∞–≤—Ç—Ä–∞–∫ –Ω–∞ –ø–ª–æ—Ç—É"],
//         icon: <AcUnit />
//       },
//       {
//         name: "–°—Ç–µ–ø–Ω—ã–µ –ø–∞—Ä—É—Å–∞",
//         desc: "–ü–∞–ª–∞—Ç–∫–∏ –≤ —Ñ–æ—Ä–º–µ –ø–∞—Ä—É—Å–æ–≤ —Å—Ä–µ–¥–∏ —Å—Ç–µ–ø–µ–π",
//         features: ["–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∑–≤–µ–∑–¥–∞–º–∏", "–î–µ–≥—É—Å—Ç–∞—Ü–∏—è –≤–∏–Ω"],
//         icon: <Nature />
//       },
//       {
//         name: "–ö–∞–Ω—å–æ–Ω –†–æ—Å–∫–æ—à–∏",
//         desc: "–ü–∞–ª–∞—Ç–∫–∏ –Ω–∞ –∫—Ä–∞—é –∫–∞–Ω—å–æ–Ω–∞",
//         features: ["–°–ø—É—Å–∫ –∫ —Ä–µ–∫–µ", "–ô–æ–≥–∞ –Ω–∞ —Å–∫–ª–æ–Ω–∞—Ö"],
//         icon: <Nature />
//       }
//     ],
//     tipsTitle: "–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –≥–ª—ç–º–ø–∏–Ω–≥—É?",
//     tips: [
//       "–í–æ–∑—å–º–∏—Ç–µ —Ç–µ–ø–ª—É—é –æ–¥–µ–∂–¥—É - –Ω–æ—á—å—é –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ",
//       "–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Ñ–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç –¥–ª—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤",
//       "–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ä–æ–∑–µ—Ç–æ–∫ –≤ –ø–∞–ª–∞—Ç–∫–µ",
//       "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω (–º–∞–π-—Å–µ–Ω—Ç—è–±—Ä—å)",
//       "–ó–∞–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∑–∞—Ä–∞–Ω–µ–µ"
//     ],
//     backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
//     features: [
//       { icon: <Home />, label: "–†–æ—Å–∫–æ—à–Ω—ã–µ –ø–∞–ª–∞—Ç–∫–∏" },
//       { icon: <Nature />, label: "–ü—Ä–∏—Ä–æ–¥–∞" },
//       { icon: <FamilyRestroom />, label: "–î–ª—è —Å–µ–º–µ–π" },
//       { icon: <Pets />, label: "–° –∂–∏–≤–æ—Ç–Ω—ã–º–∏" },
//       { icon: <LocalFireDepartment />, label: "–ú–∞–Ω–≥–∞–ª" }
//     ]
//   }
// }

// function GlampingGuide() {
//   const { currentLanguage } = useLanguage()
//   const t = GLAMPING_CONTENT[currentLanguage]
//   const theme = useTheme()
//   const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

//   return (
//     <>
//       <Head>
//         <title>{t.title}</title>
//         <meta name="description" content={t.metaDescription} />
//       </Head>

//       <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
//         <Header />
        
//         <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
//           <Paper elevation={3} sx={{ 
//             p: isMobile ? 2 : 4, 
//             borderRadius: 2, 
//             mb: 4,
//             '& .MuiListItem-root': {
//               py: isMobile ? 0.5 : 1
//             }
//           }}>
//             <Typography variant="h4" component="h1" sx={{ 
//               fontWeight: 700,
//               textAlign: 'center',
//               color: 'primary.main',
//               fontSize: isMobile ? '1.5rem' : '2rem',
//               mb: 2
//             }}>
//               {t.title}
//             </Typography>

//             <Box sx={{ 
//               width: '100%',
//               height: isMobile ? 200 : 500,
//               position: 'relative',
//               mb: 4,
//               borderRadius: 2,
//               overflow: 'hidden',
//               boxShadow: theme.shadows[2]
//             }}>
//               <img
//                 src="/glamping.png"
//                 alt={t.title}
//                 style={{
//                   width: '100%',
//                   height: '100%',
//                   objectFit: 'cover',
//                   objectPosition: 'center'
//                 }}
//               />
//             </Box>

//             <Typography variant="h6" component="p" sx={{
//               textAlign: 'center',
//               color: 'text.secondary',
//               mb: 4,
//               fontSize: isMobile ? '1rem' : '1.1rem'
//             }}>
//               {t.subtitle}
//             </Typography>

//             <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
//               <Typography variant="h5" component="h3" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.conceptTitle}
//               </Typography>
//               <Typography>
//                 {t.concept}
//               </Typography>
//             </Box>

//             <Box sx={{ mb: 4 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <Nature fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.benefitsTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.benefits.map((item, index) => (
//                   <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>

//               <Box sx={{ 
//                 display: 'flex', 
//                 flexWrap: 'wrap', 
//                 gap: 1, 
//                 mt: 3,
//                 justifyContent: 'center'
//               }}>
//                 {t.features.map((feature, index) => (
//                   <Chip 
//                     key={`feature-${index}`}
//                     icon={feature.icon} 
//                     label={feature.label} 
//                     size={isMobile ? 'small' : 'medium'}
//                     sx={{ 
//                       '& .MuiChip-icon': { color: 'primary.main' },
//                       backgroundColor: 'background.paper'
//                     }}
//                   />
//                 ))}
//               </Box>
//             </Box>

//             <Box sx={{ mb: 4 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <LocalFireDepartment fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.locationsTitle}
//               </Typography>
              
//               <Grid container spacing={3}>
//                 {t.locations.map((location, index) => (
//                   <Grid item xs={12} sm={6} key={`location-${index}`}>
//                     <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
//                       <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
//                         {React.cloneElement(location.icon, { 
//                           color: 'primary',
//                           fontSize: isMobile ? 'medium' : 'large'
//                         })}
//                         <Typography variant="h6" sx={{ color: 'primary.main' }}>
//                           {location.name}
//                         </Typography>
//                       </Box>
//                       <Typography variant="body2" sx={{ mb: 2 }}>
//                         {location.desc}
//                       </Typography>
//                       <List dense>
//                         {location.features.map((feature, idx) => (
//                           <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
//                             <ListItemIcon sx={{ minWidth: 32 }}>
//                               <CheckCircle fontSize="small" color="secondary" />
//                             </ListItemIcon>
//                             <Typography variant="body2">
//                               {feature}
//                             </Typography>
//                           </ListItem>
//                         ))}
//                       </List>
//                     </Paper>
//                   </Grid>
//                 ))}
//               </Grid>
//             </Box>

//             <Box sx={{ mb: 3 }}>
//               <Typography variant="h5" component="h2" sx={{
//                 display: 'flex',
//                 alignItems: 'center',
//                 gap: 1,
//                 fontSize: isMobile ? '1.2rem' : '1.5rem',
//                 mb: 2,
//                 color: 'primary.dark'
//               }}>
//                 <FamilyRestroom fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
//                 {t.tipsTitle}
//               </Typography>
              
//               <List dense={isMobile}>
//                 {t.tips.map((item, index) => (
//                   <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
//                     <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
//                       <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
//                     </ListItemIcon>
//                     <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
//                       {item}
//                     </Typography>
//                   </ListItem>
//                 ))}
//               </List>
//             </Box>
//           </Paper>

//           <Box sx={{ textAlign: 'center', mt: 2 }}>
//             <Link href="/blog" passHref legacyBehavior>
//               <Button 
//                 variant="contained" 
//                 color="primary"
//                 size={isMobile ? 'medium' : 'large'}
//                 startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
//                 sx={{ 
//                   px: isMobile ? 3 : 4,
//                   py: 1,
//                   fontWeight: 600,
//                   fontSize: isMobile ? '0.9rem' : '1rem',
//                   borderRadius: 2
//                 }}
//               >
//                 {t.backButton}
//               </Button>
//             </Link>
//           </Box>
//         </Container>
//         <Footer />
//       </Box>
//     </>
//   )
// }

// export default function GlampingPage() {
//   return (
//     <Provider store={store}>
//       <LanguageProvider>
//         <GlampingGuide />
//       </LanguageProvider>
//     </Provider>
//   )
// }




'use client'

import React from 'react'
import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
import Link from 'next/link'
import { Home, Nature, FamilyRestroom, Pets, CheckCircle, ArrowBack, LocalFireDepartment, OutdoorGrill, AcUnit } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'

const GLAMPING_CONTENT = {
  ua: {
    title: "–ì–ª–µ–º–ø—ñ–Ω–≥: —Ä–æ–∑–∫—ñ—à —Å–µ—Ä–µ–¥ –ø—Ä–∏—Ä–æ–¥–∏",
    metaDescription: "üîù –ù–∞–π–∫—Ä–∞—â—ñ –≥–ª–µ–º–ø—ñ–Ω–≥ –ª–æ–∫–∞—Ü—ñ—ó –£–∫—Ä–∞—ó–Ω–∏. –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –Ω–∞–º–µ—Ç–∏ –∑ —É—Å—ñ–º–∞ –∑—Ä—É—á–Ω–æ—Å—Ç—è–º–∏ —Å–µ—Ä–µ–¥ –¥–∏–∫–æ—ó –ø—Ä–∏—Ä–æ–¥–∏.",
    subtitle: "–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –¥–æ—Å–≤—ñ–¥ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –Ω–∞ –ø—Ä–∏—Ä–æ–¥—ñ –∑ –∫–æ–º—Ñ–æ—Ä—Ç–æ–º",
    conceptTitle: "–©–æ —Ç–∞–∫–µ –≥–ª–µ–º–ø—ñ–Ω–≥?",
    concept: "–ì–ª–µ–º–ø—ñ–Ω–≥ (glamorous + camping) - —Ü–µ –∫–µ–º–ø—ñ–Ω–≥ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–æ–∑–∫–æ—à—ñ, –¥–µ –≤–∏ –Ω–∞—Å–æ–ª–æ–¥–∂—É—î—Ç–µ—Å—å –ø—Ä–∏—Ä–æ–¥–æ—é, –Ω–µ –≤—ñ–¥–º–æ–≤–ª—è—é—á–∏—Å—å –≤—ñ–¥ –∫–æ–º—Ñ–æ—Ä—Ç—É. –¶–µ —ñ–¥–µ–∞–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Ö–æ—á–µ –±—É—Ç–∏ –±–ª–∏–∂—á–µ –¥–æ –ø—Ä–∏—Ä–æ–¥–∏, –∞–ª–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π –≤—ñ–¥–º–æ–≤–ª—è—Ç–∏—Å—è –≤—ñ–¥ –∑—Ä—É—á–Ω–æ—Å—Ç–µ–π.",
    benefitsTitle: "–ß–æ–º—É –≤–∞—Ä—Ç–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≥–ª–µ–º–ø—ñ–Ω–≥?",
    benefits: [
      "–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó —Å–µ—Ä–µ–¥ –Ω–µ—Ç—Ä—ñ–ø–Ω–æ—ó –ø—Ä–∏—Ä–æ–¥–∏",
      "–ü–æ–≤–Ω–æ—Ü—ñ–Ω–Ω—ñ –ª—ñ–∂–∫–∞ —Ç–∞ –∑—Ä—É—á–Ω—ñ –º–µ–±–ª—ñ –≤ –Ω–∞–º–µ—Ç–∞—Ö",
      "–û—Å–æ–±–ª–∏–≤–∏–π —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∏–π –∞–Ω—Ç—É—Ä–∞–∂",
      "–ï–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫ –±–µ–∑ —à–∫–æ–¥–∏ –¥–ª—è –ø—Ä–∏—Ä–æ–¥–∏",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª, —è–∫–∏–π –ø–æ–¥–±–∞—î –ø—Ä–æ –≤–∞—à –∫–æ–º—Ñ–æ—Ä—Ç"
    ],
    typesTitle: "–†—ñ–∑–Ω–æ–≤–∏–¥–∏ –≥–ª–µ–º–ø—ñ–Ω–≥—É",
    types: [
      {
        name: "–õ—ñ—Å–æ–≤–∏–π –≥–ª–µ–º–ø—ñ–Ω–≥",
        desc: "–ù–∞–º–µ—Ç–∏ —Å–µ—Ä–µ–¥ –¥–µ—Ä–µ–≤ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Å–ø–æ–≥–ª—è–¥–∞–Ω–Ω—è –¥–∏–∫–æ—ó –ø—Ä–∏—Ä–æ–¥–∏",
        features: ["–ü—Ä–æ–≥—É–ª—è–Ω–∫–∏ –ª—ñ—Å–æ–º", "–°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –ø—Ç–∞—Ö–∞–º–∏"],
        icon: <Nature />
      },
      {
        name: "–ì—ñ—Ä—Å—å–∫–∏–π –≥–ª–µ–º–ø—ñ–Ω–≥",
        desc: "–ù–∞–º–µ—Ç–∏ –∑ –ø–∞–Ω–æ—Ä–∞–º–Ω–∏–º –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä–∏",
        features: ["–¢—Ä–µ–∫—ñ–Ω–≥–æ–≤—ñ –º–∞—Ä—à—Ä—É—Ç–∏", "–°–≤—ñ–∂—ñ –≥—ñ—Ä—Å—å–∫—ñ –ø–æ–≤—ñ—Ç—Ä—è"],
        icon: <Nature />
      },
      {
        name: "–ë—ñ–ª—è –≤–æ–¥–æ–π–º",
        desc: "–ù–∞–º–µ—Ç–∏ –Ω–∞ –±–µ—Ä–µ–∑—ñ –æ–∑–µ—Ä —á–∏ —Ä—ñ—á–æ–∫",
        features: ["–ö—É–ø–∞–Ω–Ω—è —É –ø—Ä–∏—Ä–æ–¥–Ω–∏—Ö –≤–æ–¥–æ–π–º–∞—Ö", "–†–∏–±–æ–ª–æ–≤–ª—è"],
        icon: <AcUnit />
      }
    ],
    tipsTitle: "–ü–æ—Ä–∞–¥–∏ –¥–ª—è –Ω–æ–≤–∞—á–∫—ñ–≤",
    tips: [
      "–í—ñ–∑—å–º—ñ—Ç—å —Ç–µ–ø–ª–∏–π –æ–¥—è–≥ - –≤–Ω–æ—á—ñ –º–æ–∂–µ –±—É—Ç–∏ –ø—Ä–æ—Ö–æ–ª–æ–¥–Ω–æ –Ω–∞–≤—ñ—Ç—å –≤–ª—ñ—Ç–∫—É",
      "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Å–æ–±–∏ –≤—ñ–¥ –∫–æ–º–∞—Ä—ñ–≤ —Ç–∞ —ñ–Ω—à–∏—Ö –∫–æ–º–∞—Ö",
      "–£—Ç–æ—á–Ω—ñ—Ç—å, —è–∫—ñ –∑—Ä—É—á–Ω–æ—Å—Ç—ñ —î —É –Ω–∞–º–µ—Ç—ñ (–¥—É—à, —Ç—É–∞–ª–µ—Ç, —Ä–æ–∑–µ—Ç–∫–∏)",
      "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π —Å–µ–∑–æ–Ω –¥–ª—è –≤–∞—à–æ–≥–æ —Ç–∏–ø—É –≥–ª–µ–º–ø—ñ–Ω–≥—É",
      "–ó–∞–º–æ–≤—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å (–µ–∫—Å–∫—É—Ä—Å—ñ—ó, SPA —Ç–æ—â–æ)"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
    features: [
      { icon: <Home />, label: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ –Ω–∞–º–µ—Ç–∏" },
      { icon: <Nature />, label: "–ï–∫–æ–ª–æ–≥—ñ—á–Ω–æ" },
      { icon: <FamilyRestroom />, label: "–î–ª—è –≤—Å—ñ—î—ó —Ä–æ–¥–∏–Ω–∏" },
      { icon: <Pets />, label: "–ó –¥–æ–º–∞—à–Ω—ñ–º–∏ —É–ª—é–±–ª–µ–Ω—Ü—è–º–∏" },
      { icon: <LocalFireDepartment />, label: "–ú—ñ—Å—Ü–µ –¥–ª—è –≤–æ–≥–Ω–∏—â–∞" }
    ]
  },
  ru: {
    title: "–ì–ª—ç–º–ø–∏–Ω–≥: —Ä–æ—Å–∫–æ—à—å —Å—Ä–µ–¥–∏ –ø—Ä–∏—Ä–æ–¥—ã",
    metaDescription: "üîù –õ—É—á—à–∏–µ –≥–ª—ç–º–ø–∏–Ω–≥ –ª–æ–∫–∞—Ü–∏–∏ –£–∫—Ä–∞–∏–Ω—ã. –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –ø–∞–ª–∞—Ç–∫–∏ —Å–æ –≤—Å–µ–º–∏ —É–¥–æ–±—Å—Ç–≤–∞–º–∏ —Å—Ä–µ–¥–∏ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã.",
    subtitle: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ —Å –∫–æ–º—Ñ–æ—Ä—Ç–æ–º",
    conceptTitle: "–ß—Ç–æ —Ç–∞–∫–æ–µ –≥–ª—ç–º–ø–∏–Ω–≥?",
    concept: "–ì–ª—ç–º–ø–∏–Ω–≥ (glamorous + camping) - —ç—Ç–æ –∫–µ–º–ø–∏–Ω–≥ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ä–æ—Å–∫–æ—à–∏, –≥–¥–µ –≤—ã –Ω–∞—Å–ª–∞–∂–¥–∞–µ—Ç–µ—Å—å –ø—Ä–∏—Ä–æ–¥–æ–π, –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞—è—Å—å –æ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–∞. –≠—Ç–æ –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –±—ã—Ç—å –±–ª–∏–∂–µ –∫ –ø—Ä–∏—Ä–æ–¥–µ, –Ω–æ –Ω–µ –≥–æ—Ç–æ–≤ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç —É–¥–æ–±—Å—Ç–≤.",
    benefitsTitle: "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≥–ª—ç–º–ø–∏–Ω–≥?",
    benefits: [
      "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ —Å—Ä–µ–¥–∏ –Ω–µ—Ç—Ä–æ–Ω—É—Ç–æ–π –ø—Ä–∏—Ä–æ–¥—ã",
      "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –∫—Ä–æ–≤–∞—Ç–∏ –∏ —É–¥–æ–±–Ω–∞—è –º–µ–±–µ–ª—å –≤ –ø–∞–ª–∞—Ç–∫–∞—Ö",
      "–û—Å–æ–±—ã–π —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω—Ç—É—Ä–∞–∂",
      "–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –æ—Ç–¥—ã—Ö –±–µ–∑ –≤—Ä–µ–¥–∞ –¥–ª—è –ø—Ä–∏—Ä–æ–¥—ã",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –≤–∞—à–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ"
    ],
    typesTitle: "–†–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–∏ –≥–ª—ç–º–ø–∏–Ω–≥–∞",
    types: [
      {
        name: "–õ–µ—Å–Ω–æ–π –≥–ª—ç–º–ø–∏–Ω–≥",
        desc: "–ü–∞–ª–∞—Ç–∫–∏ —Å—Ä–µ–¥–∏ –¥–µ—Ä–µ–≤—å–µ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–æ–π",
        features: ["–ü—Ä–æ–≥—É–ª–∫–∏ –ø–æ –ª–µ—Å—É", "–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –ø—Ç–∏—Ü–∞–º–∏"],
        icon: <Nature />
      },
      {
        name: "–ì–æ—Ä–Ω—ã–π –≥–ª—ç–º–ø–∏–Ω–≥",
        desc: "–ü–∞–ª–∞—Ç–∫–∏ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä—ã",
        features: ["–¢—Ä–µ–∫–∫–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã", "–°–≤–µ–∂–∏–π –≥–æ—Ä–Ω—ã–π –≤–æ–∑–¥—É—Ö"],
        icon: <Nature />
      },
      {
        name: "–£ –≤–æ–¥–æ–µ–º–æ–≤",
        desc: "–ü–∞–ª–∞—Ç–∫–∏ –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä –∏–ª–∏ —Ä–µ–∫",
        features: ["–ö—É–ø–∞–Ω–∏–µ –≤ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –≤–æ–¥–æ–µ–º–∞—Ö", "–†—ã–±–∞–ª–∫–∞"],
        icon: <AcUnit />
      }
    ],
    tipsTitle: "–°–æ–≤–µ—Ç—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤",
    tips: [
      "–í–æ–∑—å–º–∏—Ç–µ —Ç–µ–ø–ª—É—é –æ–¥–µ–∂–¥—É - –Ω–æ—á—å—é –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ –¥–∞–∂–µ –ª–µ—Ç–æ–º",
      "–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç –∫–æ–º–∞—Ä–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞—Å–µ–∫–æ–º—ã—Ö",
      "–£—Ç–æ—á–Ω–∏—Ç–µ, –∫–∞–∫–∏–µ —É–¥–æ–±—Å—Ç–≤–∞ –µ—Å—Ç—å –≤ –ø–∞–ª–∞—Ç–∫–µ (–¥—É—à, —Ç—É–∞–ª–µ—Ç, —Ä–æ–∑–µ—Ç–∫–∏)",
      "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Å–µ–∑–æ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–∏–ø–∞ –≥–ª—ç–º–ø–∏–Ω–≥–∞",
      "–ó–∞–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∑–∞—Ä–∞–Ω–µ–µ (—ç–∫—Å–∫—É—Ä—Å–∏–∏, SPA –∏ —Ç.–¥.)"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
    features: [
      { icon: <Home />, label: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –ø–∞–ª–∞—Ç–∫–∏" },
      { icon: <Nature />, label: "–≠–∫–æ–ª–æ–≥–∏—á–Ω–æ" },
      { icon: <FamilyRestroom />, label: "–î–ª—è –≤—Å–µ–π —Å–µ–º—å–∏" },
      { icon: <Pets />, label: "–° –¥–æ–º–∞—à–Ω–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏" },
      { icon: <LocalFireDepartment />, label: "–ú–µ—Å—Ç–æ –¥–ª—è –∫–æ—Å—Ç—Ä–∞" }
    ]
  }
}

function GlampingGuide() {
  const { currentLanguage } = useLanguage()
  const t = GLAMPING_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/glamping.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
              <Typography variant="h5" component="h3" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.conceptTitle}
              </Typography>
              <Typography>
                {t.concept}
              </Typography>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Nature fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.benefitsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.benefits.map((item, index) => (
                  <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                {t.features.map((feature, index) => (
                  <Chip 
                    key={`feature-${index}`}
                    icon={feature.icon} 
                    label={feature.label} 
                    size={isMobile ? 'small' : 'medium'}
                    sx={{ 
                      '& .MuiChip-icon': { color: 'primary.main' },
                      backgroundColor: 'background.paper'
                    }}
                  />
                ))}
              </Box>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <LocalFireDepartment fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.typesTitle}
              </Typography>
              
              <Grid container spacing={3}>
                {t.types.map((type, index) => (
                  <Grid item xs={12} sm={6} key={`type-${index}`}>
                    <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                        {React.cloneElement(type.icon, { 
                          color: 'primary',
                          fontSize: isMobile ? 'medium' : 'large'
                        })}
                        <Typography variant="h6" sx={{ color: 'primary.main' }}>
                          {type.name}
                        </Typography>
                      </Box>
                      <Typography variant="body2" sx={{ mb: 2 }}>
                        {type.desc}
                      </Typography>
                      <List dense>
                        {type.features.map((feature, idx) => (
                          <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
                            <ListItemIcon sx={{ minWidth: 32 }}>
                              <CheckCircle fontSize="small" color="secondary" />
                            </ListItemIcon>
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          </ListItem>
                        ))}
                      </List>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 3 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <FamilyRestroom fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>

          <Box sx={{ textAlign: 'center', mt: 2 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

export default function GlampingPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <GlampingGuide />
      </LanguageProvider>
    </Provider>
  )
}