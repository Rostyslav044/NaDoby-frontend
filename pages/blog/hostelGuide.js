'use client'

import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery } from '@mui/material'
import Link from 'next/link'
import { Home, Hotel, Groups, Savings, CheckCircle, ArrowBack, Wifi, Public, Security, EmojiPeople } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'
import RelatedPosts from './components/RelatedPosts'

const HOSTEL_CONTENT = {
  ua: {
    title: "–•–æ—Å—Ç–µ–ª–∏: –±—é–¥–∂–µ—Ç–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –∑ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º",
    metaDescription: "üîù –•–æ—Å—Ç–µ–ª–∏ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ –¥–ª—è –µ–∫–æ–Ω–æ–º–Ω–∏—Ö –ø–æ–¥–æ—Ä–æ–∂—É—é—á–∏—Ö. –°–ø—ñ–ª—å–Ω—ñ –∫—ñ–º–Ω–∞—Ç–∏, –Ω–æ–≤—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞ —Ç–∞ –Ω–∏–∑—å–∫—ñ —Ü–µ–Ω–∏. –ë–µ–∑ –∫–æ–º—ñ—Å—ñ–π —Ç–∞ –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫—ñ–≤.",
    subtitle: "–ß–æ–º—É —Ö–æ—Å—Ç–µ–ª–∏ - —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–µ—à–µ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç?",
    advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏ —Ö–æ—Å—Ç–µ–ª—ñ–≤",
    advantages: [
      "–¶—ñ–Ω–∏ –Ω–∞ 50-80% –Ω–∏–∂—á—ñ –∑–∞ –≥–æ—Ç–µ–ª—ñ",
      "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–Ω–∞–π—Ç–∏ –Ω–æ–≤–∏—Ö –¥—Ä—É–∑—ñ–≤",
      "–ó–∞–≥–∞–ª—å–Ω—ñ –∫—É—Ö–Ω—ñ –¥–ª—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è —ó–∂—ñ",
      "–Ü–≥—Ä–æ–≤—ñ –∑–æ–Ω–∏ —Ç–∞ —Å–ø—ñ–ª—å–Ω—ñ –ø—Ä–æ—Å—Ç–æ—Ä–∏",
      "–ß–∞—Å—Ç–æ —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω—ñ –≤ —Å–∞–º–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ",
      "–ì–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è",
      "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π Wi-Fi —Ç–∞ –º—ñ—Å—Ü–µ–≤—ñ –ø–æ—Ä–∞–¥–∏"
    ],
    tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —Ö–æ—Ä–æ—à–∏–π —Ö–æ—Å—Ç–µ–ª?",
    tips: [
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤—ñ–¥–≥—É–∫–∏ –ø—Ä–æ —á–∏—Å—Ç–æ—Ç—É",
      "–£—Ç–æ—á–Ω—ñ—Ç—å —Ç–∏–ø –∫—ñ–º–Ω–∞—Ç–∏ (–∑–∞–≥–∞–ª—å–Ω–∞/–ø—Ä–∏–≤–∞—Ç–Ω–∞)",
      "–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ –∑–∞–º–∫–∏ –¥–ª—è —Ä–µ—á–µ–π",
      "–û—Ü—ñ–Ω—ñ—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É —Ä–æ–∑–≤'—è–∑–∫—É",
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø—Ä–∞–ª—å–Ω–æ—ó –º–∞—à–∏–Ω–∏",
      "–£–∑–≥–æ–¥—å—Ç–µ —á–∞—Å –∑–∞—ó–∑–¥—É/–≤–∏—ó–∑–¥—É",
      "–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –ø—Ä–æ –ø—Ä–∞–≤–∏–ª–∞ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É"
  },
  ru: {
    title: "–•–æ—Å—Ç–µ–ª—ã: –±—é–¥–∂–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –æ–ø—ã—Ç–æ–º",
    metaDescription: "üîù –•–æ—Å—Ç–µ–ª—ã –ø–æ –≤—Å–µ–π –£–∫—Ä–∞–∏–Ω–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤. –û–±—â–∏–µ –∫–æ–º–Ω–∞—Ç—ã, –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –∏ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã. –ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –∏ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤.",
    subtitle: "–ü–æ—á–µ–º—É —Ö–æ—Å—Ç–µ–ª—ã - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–µ—à–µ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç?",
    advantagesTitle: "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ö–æ—Å—Ç–µ–ª–æ–≤",
    advantages: [
      "–¶–µ–Ω—ã –Ω–∞ 50-80% –Ω–∏–∂–µ –æ—Ç–µ–ª–µ–π",
      "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π",
      "–û–±—â–∏–µ –∫—É—Ö–Ω–∏ –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –µ–¥—ã",
      "–ò–≥—Ä–æ–≤—ã–µ –∑–æ–Ω—ã –∏ –æ–±—â–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞",
      "–ß–∞—Å—Ç–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ —Å–∞–º–æ–º —Ü–µ–Ω—Ç—Ä–µ",
      "–ì–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
      "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π Wi-Fi –∏ –º–µ—Å—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã"
    ],
    tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–∏–π —Ö–æ—Å—Ç–µ–ª?",
    tips: [
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–∑—ã–≤—ã –æ —á–∏—Å—Ç–æ—Ç–µ",
      "–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –∫–æ–º–Ω–∞—Ç—ã (–æ–±—â–∞—è/–ø—Ä–∏–≤–∞—Ç–Ω–∞—è)",
      "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–∞–º–∫–∏ –¥–ª—è –≤–µ—â–µ–π",
      "–û—Ü–µ–Ω–∏—Ç–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é —Ä–∞–∑–≤—è–∑–∫—É",
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∏—Ä–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã",
      "–°–æ–≥–ª–∞—Å—É–π—Ç–µ –≤—Ä–µ–º—è –∑–∞–µ–∑–¥–∞/–≤—ã–µ–∑–¥–∞",
      "–£–∑–Ω–∞–π—Ç–µ –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –æ–±—â–µ–Ω–∏—è"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥"
  }
}

function HostelGuide() {
  const { currentLanguage } = useLanguage()
  const t = HOSTEL_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/hostel.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Groups fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.advantagesTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.advantages.map((item, index) => (
                  <ListItem key={`adv-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                <Chip 
                  icon={<Savings fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–ë—é–¥–∂–µ—Ç" : "–ë—é–¥–∂–µ—Ç"} 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Wifi fontSize="small" />} 
                  label="Wi-Fi" 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Public fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è" : "–û–±—â–µ–Ω–∏–µ"} 
                  size={isMobile ? 'small' : 'medium'}
                />
                <Chip 
                  icon={<Security fontSize="small" />} 
                  label={currentLanguage === 'ua' ? "–ë–µ–∑–ø–µ–∫–∞" : "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"} 
                  size={isMobile ? 'small' : 'medium'}
                />
              </Box>
            </Box>

            <Box sx={{ mb: 3 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <EmojiPeople fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>
          <RelatedPosts currentSlug="hostelGuide" />
          <Box sx={{ textAlign: 'center', mt: 2 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

export default function HostelPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <HostelGuide />
      </LanguageProvider>
    </Provider>
  )
}