'use client'

import React from 'react'
import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
import Link from 'next/link'
import { 
  Pets,
  Home,
  MedicalServices,
  Park,
  Checkroom,
  EmojiFoodBeverage,
  Vaccines,
  Groups,
  ArrowBack,
  CheckCircle
} from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'

const PET_HOTEL_CONTENT = {
  ua: {
    title: "–ì–æ—Ç–µ–ª—ñ –¥–ª—è —Ç–≤–∞—Ä–∏–Ω –∑ —Ç—É—Ä–±–æ—Ç–æ—é",
    metaDescription: "üêï –ù–∞–π–∫—Ä–∞—â—ñ –≥–æ—Ç–µ–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –¥–ª—è –≤–∞—à–∏—Ö —É–ª—é–±–ª–µ–Ω—Ü—ñ–≤. –ü–æ–≤–Ω–∏–π –≥—ñ–¥ –∑ –≤–∏–±–æ—Ä—É –º—ñ—Å—Ü—å –¥–ª—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —É—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤–∞—Ä–∏–Ω.",
    subtitle: "–Ø–∫ –æ–±—Ä–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–∏–π –≥–æ—Ç–µ–ª—å –¥–ª—è –≤–∞—à–æ–≥–æ —É–ª—é–±–ª–µ–Ω—Ü—è",
    intro: "–ì–æ—Ç–µ–ª—å –¥–ª—è —Ç–≤–∞—Ä–∏–Ω - —Ü–µ —ñ–¥–µ–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è, –∫–æ–ª–∏ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ª–∏—à–∏—Ç–∏ –≤–∏—Ö–æ–≤–∞–Ω—Ü—è –Ω–∞ —á–∞—Å –≤—ñ–¥'—ó–∑–¥—É. –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –¥–æ–≥–ª—è–¥, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ñ —É–º–æ–≤–∏ —Ç–∞ —Ç—É—Ä–±–æ—Ç–∞ –ø—Ä–æ –∑–¥–æ—Ä–æ–≤'—è –≤–∞—à–æ–≥–æ —É–ª—é–±–ª–µ–Ω—Ü—è.",
    benefitsTitle: "–ß–æ–º—É –≤–∞—Ä—Ç–æ –≤–∏–±–∏—Ä–∞—Ç–∏ –≥–æ—Ç–µ–ª—å –¥–ª—è —Ç–≤–∞—Ä–∏–Ω?",
    benefits: [
      "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –¥–æ–≥–ª—è–¥ 24/7",
      "–†–µ–≥—É–ª—è—Ä–Ω—ñ –ø—Ä–æ–≥—É–ª—è–Ω–∫–∏ —Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ",
      "–ú–µ–¥–∏—á–Ω–∏–π –Ω–∞–≥–ª—è–¥ —Ç–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞",
      "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∫–æ–∂–Ω–æ–≥–æ –≤–∏—Ö–æ–≤–∞–Ω—Ü—è",
      "–ë–µ–∑–ø–µ—á–Ω—ñ —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ñ —É–º–æ–≤–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è"
    ],
    typesTitle: "–í–∏–¥–∏ –≥–æ—Ç–µ–ª—ñ–≤ –¥–ª—è —Ç–≤–∞—Ä–∏–Ω",
    types: [
      {
        name: "–î–ª—è —Å–æ–±–∞–∫",
        desc: "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –≥–æ—Ç–µ–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –¥–ª—è —Å–æ–±–∞–∫ —É—Å—ñ—Ö –ø–æ—Ä—ñ–¥",
        features: ["–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –≤–æ–ª—å—î—Ä–∏", "–í–∏–≥—É–ª 3-4 —Ä–∞–∑–∏ –Ω–∞ –¥–µ–Ω—å", "–î—Ä–µ—Å–∏—Ä—É–≤–∞–Ω–Ω—è"],
        icon: <Pets />
      },
      {
        name: "–î–ª—è –∫–æ—Ç—ñ–≤",
        desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ñ —É–º–æ–≤–∏ –¥–ª—è –∫–æ—Ç—ñ–≤ –∑ —ñ–≥—Ä–æ–≤–∏–º–∏ –∑–æ–Ω–∞–º–∏",
        features: ["–ë–∞–≥–∞—Ç–æ—Ä—ñ–≤–Ω–µ–≤—ñ –±—É–¥–∏–Ω–æ—á–∫–∏", "–Ü–≥—Ä–æ–≤—ñ –∫–æ–º–ø–ª–µ–∫—Å–∏", "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –¥–æ–≥–ª—è–¥"],
        icon: <Home />
      },
      {
        name: "–î–ª—è –µ–∫–∑–æ—Ç–∏—á–Ω–∏—Ö —Ç–≤–∞—Ä–∏–Ω",
        desc: "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —É–º–æ–≤–∏ –¥–ª—è –≥—Ä–∏–∑—É–Ω—ñ–≤, –ø—Ç–∞—Ö—ñ–≤ —Ç–∞ —Ä–µ–ø—Ç–∏–ª—ñ–π",
        features: ["–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∫–ª—ñ—Ç–∫–∏", "–ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏", "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π —Ä–∞—Ü—ñ–æ–Ω"],
        icon: <Park />
      }
    ],
    tipsTitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π –≥–æ—Ç–µ–ª—å –¥–ª—è —Ç–≤–∞—Ä–∏–Ω–∏?",
    tips: [
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª—ñ—Ü–µ–Ω–∑—ñ—é —Ç–∞ –≤—ñ–¥–≥—É–∫–∏",
      "–û—Ü—ñ–Ω—ñ—Ç—å —É–º–æ–≤–∏ —É—Ç—Ä–∏–º–∞–Ω–Ω—è (—á–∏—Å—Ç–æ—Ç–∞, –ø—Ä–æ—Å—Ç—ñ—Ä)",
      "–£—Ç–æ—á–Ω—ñ—Ç—å –ø—Ä–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞",
      "–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –ø—Ä–æ —Ä–µ–∂–∏–º –≤–∏–≥—É–ª—É —Ç–∞ –≥–æ–¥—ñ–≤–ª—ñ",
      "–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ —Å—Ç–∞–≤–ª–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—É –¥–æ —Ç–≤–∞—Ä–∏–Ω"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
    features: [
      { icon: <MedicalServices />, label: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∏–π –Ω–∞–≥–ª—è–¥" },
      { icon: <Checkroom />, label: "–ì—ñ–≥—ñ—î–Ω—ñ—á–Ω—ñ —É–º–æ–≤–∏" },
      { icon: <EmojiFoodBeverage />, label: "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è" },
      { icon: <Vaccines />, label: "–û–±–æ–≤'—è–∑–∫–æ–≤—ñ —â–µ–ø–ª–µ–Ω–Ω—è" },
      { icon: <Groups />, label: "–°–æ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è" }
    ],
    servicesTitle: "–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏",
    services: [
      {
        name: "–ì—Ä—É–º—ñ–Ω–≥",
        description: "–ü–æ–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å –¥–æ–≥–ª—è–¥–æ–≤–∏—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä"
      },
      {
        name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∏–π –æ–≥–ª—è–¥",
        description: "–ü—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏—á–Ω–∏–π –æ–≥–ª—è–¥ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–æ–º"
      },
      {
        name: "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä",
        description: "–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–≤–∞—Ä–∏–Ω–∏ –¥–æ –≥–æ—Ç–µ–ª—é"
      },
      {
        name: "–§–æ—Ç–æ–∑–≤—ñ—Ç",
        description: "–©–æ–¥–µ–Ω–Ω—ñ —Ñ–æ—Ç–æ —Ç–∞ –≤—ñ–¥–µ–æ –≤–∞—à–æ–≥–æ —É–ª—é–±–ª–µ–Ω—Ü—è"
      }
    ]
  },
  ru: {
    title: "–û—Ç–µ–ª–∏ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö —Å –∑–∞–±–æ—Ç–æ–π",
    metaDescription: "üêï –õ—É—á—à–∏–µ –≥–æ—Å—Ç–∏–Ω–∏—á–Ω—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –≤–∞—à–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤. –ü–æ–ª–Ω—ã–π –≥–∏–¥ –ø–æ –≤—ã–±–æ—Ä—É –º–µ—Å—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö.",
    subtitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π –æ—Ç–µ–ª—å –¥–ª—è –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞",
    intro: "–û—Ç–µ–ª—å –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö - —ç—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –≤–∞–º –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –Ω–∞ –≤—Ä–µ–º—è –æ—Ç—ä–µ–∑–¥–∞. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ö–æ–¥, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –∑–∞–±–æ—Ç–∞ –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤–∞—à–µ–≥–æ –ª—é–±–∏–º—Ü–∞.",
    benefitsTitle: "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –≤—ã–±–∏—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö?",
    benefits: [
      "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ö–æ–¥ 24/7",
      "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
      "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –ø–∏—Ç–æ–º—Ü—É",
      "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è"
    ],
    typesTitle: "–í–∏–¥—ã –æ—Ç–µ–ª–µ–π –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö",
    types: [
      {
        name: "–î–ª—è —Å–æ–±–∞–∫",
        desc: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏–Ω–∏—á–Ω—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è —Å–æ–±–∞–∫ –≤—Å–µ—Ö –ø–æ—Ä–æ–¥",
        features: ["–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –≤–æ–ª—å–µ—Ä—ã", "–í—ã–≥—É–ª 3-4 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å", "–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∞"],
        icon: <Pets />
      },
      {
        name: "–î–ª—è –∫–æ—à–µ–∫",
        desc: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –∫–æ—à–µ–∫ —Å –∏–≥—Ä–æ–≤—ã–º–∏ –∑–æ–Ω–∞–º–∏",
        features: ["–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –¥–æ–º–∏–∫–∏", "–ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã", "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —É—Ö–æ–¥"],
        icon: <Home />
      },
      {
        name: "–î–ª—è —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö",
        desc: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –≥—Ä—ã–∑—É–Ω–æ–≤, –ø—Ç–∏—Ü –∏ —Ä–µ–ø—Ç–∏–ª–∏–π",
        features: ["–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–µ—Ç–∫–∏", "–ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã", "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω"],
        icon: <Park />
      }
    ],
    tipsTitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –æ—Ç–µ–ª—å –¥–ª—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ?",
    tips: [
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é –∏ –æ—Ç–∑—ã–≤—ã",
      "–û—Ü–µ–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è (—á–∏—Å—Ç–æ—Ç–∞, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ)",
      "–£—Ç–æ—á–Ω–∏—Ç–µ –æ –Ω–∞–ª–∏—á–∏–∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∞",
      "–£–∑–Ω–∞–π—Ç–µ –æ —Ä–µ–∂–∏–º–µ –≤—ã–≥—É–ª–∞ –∏ –∫–æ—Ä–º–ª–µ–Ω–∏—è",
      "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∫ –∂–∏–≤–æ—Ç–Ω—ã–º"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
    features: [
      { icon: <MedicalServices />, label: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –Ω–∞–¥–∑–æ—Ä" },
      { icon: <Checkroom />, label: "–ì–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è" },
      { icon: <EmojiFoodBeverage />, label: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ" },
      { icon: <Vaccines />, label: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–≤–∏–≤–∫–∏" },
      { icon: <Groups />, label: "–°–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è" }
    ],
    servicesTitle: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
    services: [
      {
        name: "–ì—Ä—É–º–∏–Ω–≥",
        description: "–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —É—Ö–æ–¥–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä"
      },
      {
        name: "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –æ—Å–º–æ—Ç—Ä",
        description: "–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ—Å–º–æ—Ç—Ä —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º"
      },
      {
        name: "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä",
        description: "–î–æ—Å—Ç–∞–≤–∫–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤ –æ—Ç–µ–ª—å"
      },
      {
        name: "–§–æ—Ç–æ–æ—Ç—á–µ—Ç",
        description: "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞"
      }
    ]
  }
}

function PetHotelGuide() {
  const { currentLanguage } = useLanguage()
  const t = PET_HOTEL_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/animal.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
              <Typography variant="h5" component="h3" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Pets fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.intro.split('.')[0]}.
              </Typography>
              <Typography>
                {t.intro.split('.').slice(1).join('.')}.
              </Typography>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <MedicalServices fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.benefitsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.benefits.map((item, index) => (
                  <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                {t.features.map((feature, index) => (
                  <Chip 
                    key={`feature-${index}`}
                    icon={feature.icon} 
                    label={feature.label} 
                    size={isMobile ? 'small' : 'medium'}
                    sx={{ 
                      '& .MuiChip-icon': { color: 'primary.main' },
                      backgroundColor: 'background.paper'
                    }}
                  />
                ))}
              </Box>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Home fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.typesTitle}
              </Typography>
              
              <Grid container spacing={3}>
                {t.types.map((type, index) => (
                  <Grid item xs={12} sm={6} key={`type-${index}`}>
                    <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                        {React.cloneElement(type.icon, { 
                          color: 'primary',
                          fontSize: isMobile ? 'medium' : 'large'
                        })}
                        <Typography variant="h6" sx={{ color: 'primary.main' }}>
                          {type.name}
                        </Typography>
                      </Box>
                      <Typography variant="body2" sx={{ mb: 2 }}>
                        {type.desc}
                      </Typography>
                      <List dense>
                        {type.features.map((feature, idx) => (
                          <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
                            <ListItemIcon sx={{ minWidth: 32 }}>
                              <CheckCircle fontSize="small" color="secondary" />
                            </ListItemIcon>
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          </ListItem>
                        ))}
                      </List>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 4, mt: 10 }}>
              <Typography variant="h5" component="h2" sx={{
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark',
                textAlign: 'center'
              }}>
                {t.servicesTitle}
              </Typography>
              
              <Grid container spacing={2}>
                {t.services.map((service, index) => (
                  <Grid item xs={12} sm={6} md={3} key={`service-${index}`}>
                    <Paper elevation={1} sx={{ p: 2, height: '100%', textAlign: 'center' }}>
                      <Typography variant="h6" color="primary">
                        {service.name}
                      </Typography>
                      <Typography variant="body2">
                        {service.description}
                      </Typography>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 3, mt: 10}}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Vaccines fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>

          <Box sx={{ textAlign: 'center', mt: 2 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

export default function PetHotelPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <PetHotelGuide />
      </LanguageProvider>
    </Provider>
  )
}