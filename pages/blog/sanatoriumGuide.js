'use client'

import React from 'react'
import { LanguageProvider, useLanguage } from "@/app/LanguageContext"
import Header from "@/app/components/Header"
import { store } from "@/app/store"
import { Provider } from "react-redux"
import { Box, Typography, Container, Button, Chip, List, ListItem, ListItemIcon, Paper, useTheme, useMediaQuery, Grid } from '@mui/material'
import Link from 'next/link'
import { MedicalServices, Spa, Pool, FitnessCenter, Restaurant, Nature, CheckCircle, ArrowBack } from '@mui/icons-material'
import Footer from "@/app/components/Footer"
import Head from 'next/head'


const SANATORIUM_CONTENT = {
  ua: {
    title: "–ü–∞–Ω—Å—ñ–æ–Ω–∞—Ç–∏ –∑ –ª—ñ–∫—É–≤–∞–ª—å–Ω–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–∞–º–∏",
    metaDescription: "üîù –ù–∞–π–∫—Ä–∞—â—ñ –ª—ñ–∫—É–≤–∞–ª—å–Ω—ñ –ø–∞–Ω—Å—ñ–æ–Ω–∞—Ç–∏ –£–∫—Ä–∞—ó–Ω–∏. –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥ –Ω–∞–≥–ª—è–¥–æ–º –ª—ñ–∫–∞—Ä—ñ–≤.",
    subtitle: "–Ø–∫ –≤–∏–±—Ä–∞—Ç–∏ –ø–∞–Ω—Å—ñ–æ–Ω–∞—Ç –∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—é –∫–æ—Ä–∏—Å—Ç—é –¥–ª—è –∑–¥–æ—Ä–æ–≤'—è",
    intro: "–õ—ñ–∫—É–≤–∞–ª—å–Ω—ñ –ø–∞–Ω—Å—ñ–æ–Ω–∞—Ç–∏ - —Ü–µ —ñ–¥–µ–∞–ª—å–Ω–µ –ø–æ—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É —Ç–∞ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–Ω—è. –í–æ–Ω–∏ –ø—Ä–æ–ø–æ–Ω—É—é—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å –ø—ñ–¥ –Ω–∞–≥–ª—è–¥–æ–º –ª—ñ–∫–∞—Ä—ñ–≤.",
    benefitsTitle: "–ü–µ—Ä–µ–≤–∞–≥–∏ –ª—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö –ø–∞–Ω—Å—ñ–æ–Ω–∞—Ç—ñ–≤",
    benefits: [
      "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –º–µ–¥–∏—á–Ω–∏–π —Å—É–ø—Ä–æ–≤—ñ–¥",
      "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –ª—ñ–∫—É–≤–∞–Ω–Ω—è",
      "–ü—Ä–∏—Ä–æ–¥–Ω—ñ –ª—ñ–∫—É–≤–∞–ª—å–Ω—ñ —Ñ–∞–∫—Ç–æ—Ä–∏",
      "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–Ω—è",
      "–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å"
    ],
    typesTitle: "–í–∏–¥–∏ –ª—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö –ø—Ä–æ–≥—Ä–∞–º",
    types: [
      {
        name: "–ö–∞—Ä–¥—ñ–æ–ª–æ–≥—ñ—á–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏",
        desc: "–õ—ñ–∫—É–≤–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ—Ñ—ñ–ª–∞–∫—Ç–∏–∫–∞ —Å–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω–∏—Ö –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å",
        features: ["–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "–§—ñ–∑—ñ–æ—Ç–µ—Ä–∞–ø—ñ—è", "–õ—ñ–∫—É–≤–∞–ª—å–Ω–∞ —Ñ—ñ–∑–∫—É–ª—å—Ç—É—Ä–∞"],
        icon: <MedicalServices />
      },
      {
        name: "–û—Ä—Ç–æ–ø–µ–¥–∏—á–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏",
        desc: "–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å –æ–ø–æ—Ä–Ω–æ-—Ä—É—Ö–æ–≤–æ–≥–æ –∞–ø–∞—Ä–∞—Ç—É",
        features: ["–ú–∞—Å–∞–∂", "–ì—Ä—è–∑–µ–ª—ñ–∫—É–≤–∞–Ω–Ω—è", "–õ—ñ–∫—É–≤–∞–ª—å–Ω—ñ –≤–∞–Ω–Ω–∏"],
        icon: <FitnessCenter />
      },
      {
        name: "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—ñ—á–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏",
        desc: "–õ—ñ–∫—É–≤–∞–Ω–Ω—è —à–∫—ñ—Ä–Ω–∏—Ö –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—å –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø—Ä–∏—Ä–æ–¥–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä—ñ–≤",
        features: ["–ë–∞–ª—å–Ω–µ–æ—Ç–µ—Ä–∞–ø—ñ—è", "–§–æ—Ç–æ—Ç–µ—Ä–∞–ø—ñ—è", "–ö–ª—ñ–º–∞—Ç–æ—Ç–µ—Ä–∞–ø—ñ—è"],
        icon: <Spa />
      }
    ],
    tipsTitle: "–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∏–±—Ä–∞—Ç–∏ –ø–∞–Ω—Å—ñ–æ–Ω–∞—Ç?",
    tips: [
      "–í–∏–∑–Ω–∞—á—Ç–µ –æ—Å–Ω–æ–≤–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ –∑–¥–æ—Ä–æ–≤'—è–º –¥–ª—è –≤–∏–±–æ—Ä—É –ø—Ä–æ—Ñ—ñ–ª—é",
      "–ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é –º–µ–¥–∏—á–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É",
      "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ª—ñ–∫—É–≤–∞–ª—å–Ω–∏—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä",
      "–£—Ç–æ—á–Ω—ñ—Ç—å —É–º–æ–≤–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è —Ç–∞ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è",
      "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω –ø–µ—Ä–µ–±—É–≤–∞–Ω–Ω—è (–≤—ñ–¥ 14 –¥–Ω—ñ–≤)"
    ],
    backButton: "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –±–ª–æ–≥—É",
    features: [
      { icon: <MedicalServices />, label: "–ú–µ–¥–∏—á–Ω–∏–π —Å—É–ø—Ä–æ–≤—ñ–¥" },
      { icon: <Pool />, label: "–õ—ñ–∫—É–≤–∞–ª—å–Ω—ñ –±–∞—Å–µ–π–Ω–∏" },
      { icon: <Nature />, label: "–ü—Ä–∏—Ä–æ–¥–Ω—ñ —Ñ–∞–∫—Ç–æ—Ä–∏" },
      { icon: <Restaurant />, label: "–î—ñ—î—Ç–∏—á–Ω–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è" },
      { icon: <Spa />, label: "SPA-–ø—Ä–æ—Ü–µ–¥—É—Ä–∏" }
    ]
  },
  ru: {
    title: "–ü–∞–Ω—Å–∏–æ–Ω–∞—Ç—ã —Å –ª–µ—á–µ–±–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏",
    metaDescription: "üîù –õ—É—á—à–∏–µ –ª–µ—á–µ–±–Ω—ã–µ –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç—ã –£–∫—Ä–∞–∏–Ω—ã. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º –≤—Ä–∞—á–µ–π.",
    subtitle: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–ª—å–∑–æ–π –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è",
    intro: "–õ–µ—á–µ–±–Ω—ã–µ –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç—ã - —ç—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –æ—Ç–¥—ã—Ö–∞ –∏ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è. –û–Ω–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º –≤—Ä–∞—á–µ–π.",
    benefitsTitle: "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ª–µ—á–µ–±–Ω—ã—Ö –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç–æ–≤",
    benefits: [
      "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–µ—á–µ–Ω–∏—è",
      "–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ –ª–µ—á–µ–±–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã",
      "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—é",
      "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π"
    ],
    typesTitle: "–í–∏–¥—ã –ª–µ—á–µ–±–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
    types: [
      {
        name: "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        desc: "–õ–µ—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
        features: ["–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "–§–∏–∑–∏–æ—Ç–µ—Ä–∞–ø–∏—è", "–õ–µ—á–µ–±–Ω–∞—è —Ñ–∏–∑–∫—É–ª—å—Ç—É—Ä–∞"],
        icon: <MedicalServices />
      },
      {
        name: "–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        desc: "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –æ–ø–æ—Ä–Ω–æ-–¥–≤–∏–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞",
        features: ["–ú–∞—Å—Å–∞–∂", "–ì—Ä—è–∑–µ–ª–µ—á–µ–Ω–∏–µ", "–õ–µ—á–µ–±–Ω—ã–µ –≤–∞–Ω–Ω—ã"],
        icon: <FitnessCenter />
      },
      {
        name: "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        desc: "–õ–µ—á–µ–Ω–∏–µ –∫–æ–∂–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤",
        features: ["–ë–∞–ª—å–Ω–µ–æ—Ç–µ—Ä–∞–ø–∏—è", "–§–æ—Ç–æ—Ç–µ—Ä–∞–ø–∏—è", "–ö–ª–∏–º–∞—Ç–æ—Ç–µ—Ä–∞–ø–∏—è"],
        icon: <Spa />
      }
    ],
    tipsTitle: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–∞–Ω—Å–∏–æ–Ω–∞—Ç?",
    tips: [
      "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è",
      "–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ª–µ—á–µ–±–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä",
      "–£—Ç–æ—á–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∏ –ø–∏—Ç–∞–Ω–∏—è",
      "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Å—Ä–æ–∫ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è (–æ—Ç 14 –¥–Ω–µ–π)"
    ],
    backButton: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–ª–æ–≥",
    features: [
      { icon: <MedicalServices />, label: "–ú–µ–¥—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ" },
      { icon: <Pool />, label: "–õ–µ—á–µ–±–Ω—ã–µ –±–∞—Å—Å–µ–π–Ω—ã" },
      { icon: <Nature />, label: "–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã" },
      { icon: <Restaurant />, label: "–î–∏–µ—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ" },
      { icon: <Spa />, label: "SPA-–ø—Ä–æ—Ü–µ–¥—É—Ä—ã" }
    ]
  }
}

function SanatoriumGuide() {
  const { currentLanguage } = useLanguage()
  const t = SANATORIUM_CONTENT[currentLanguage]
  const theme = useTheme()
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))

  return (
    <>
      <Head>
        <title>{t.title}</title>
        <meta name="description" content={t.metaDescription} />
      </Head>

      <Box sx={{ backgroundColor: '#f9f9f9', minHeight: '100vh' }}>
        <Header />
        
        <Container maxWidth="md" sx={{ py: isMobile ? 3 : 6, px: isMobile ? 2 : 4 }}>
          <Paper elevation={3} sx={{ 
            p: isMobile ? 2 : 4, 
            borderRadius: 2, 
            mb: 4,
            '& .MuiListItem-root': {
              py: isMobile ? 0.5 : 1
            }
          }}>
            <Typography variant="h4" component="h1" sx={{ 
              fontWeight: 700,
              textAlign: 'center',
              color: 'primary.main',
              fontSize: isMobile ? '1.5rem' : '2rem',
              mb: 2
            }}>
              {t.title}
            </Typography>

            <Box sx={{ 
              width: '100%',
              height: isMobile ? 200 : 500,
              position: 'relative',
              mb: 4,
              borderRadius: 2,
              overflow: 'hidden',
              boxShadow: theme.shadows[2]
            }}>
              <img
                src="/pansionat.png"
                alt={t.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover',
                  objectPosition: 'center'
                }}
              />
            </Box>

            <Typography variant="h6" component="p" sx={{
              textAlign: 'center',
              color: 'text.secondary',
              mb: 4,
              fontSize: isMobile ? '1rem' : '1.1rem'
            }}>
              {t.subtitle}
            </Typography>

            <Box sx={{ mb: 4, p: 3, backgroundColor: '#f0f7f4', borderRadius: 2 }}>
              <Typography variant="h5" component="h3" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <MedicalServices fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.intro.split(':')[0]}
              </Typography>
              <Typography>
                {t.intro.split(':')[1]}
              </Typography>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <MedicalServices fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.benefitsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.benefits.map((item, index) => (
                  <ListItem key={`benefit-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="success" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>

              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1, 
                mt: 3,
                justifyContent: 'center'
              }}>
                {t.features.map((feature, index) => (
                  <Chip 
                    key={`feature-${index}`}
                    icon={feature.icon} 
                    label={feature.label} 
                    size={isMobile ? 'small' : 'medium'}
                    sx={{ 
                      '& .MuiChip-icon': { color: 'primary.main' },
                      backgroundColor: 'background.paper'
                    }}
                  />
                ))}
              </Box>
            </Box>

            <Box sx={{ mb: 4 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <Spa fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.typesTitle}
              </Typography>
              
              <Grid container spacing={3}>
                {t.types.map((type, index) => (
                  <Grid item xs={12} sm={6} key={`type-${index}`}>
                    <Paper elevation={2} sx={{ p: 2, height: '100%', borderRadius: 2 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>
                        {React.cloneElement(type.icon, { 
                          color: 'primary',
                          fontSize: isMobile ? 'medium' : 'large'
                        })}
                        <Typography variant="h6" sx={{ color: 'primary.main' }}>
                          {type.name}
                        </Typography>
                      </Box>
                      <Typography variant="body2" sx={{ mb: 2 }}>
                        {type.desc}
                      </Typography>
                      <List dense>
                        {type.features.map((feature, idx) => (
                          <ListItem key={`feature-${index}-${idx}`} sx={{ py: 0 }}>
                            <ListItemIcon sx={{ minWidth: 32 }}>
                              <CheckCircle fontSize="small" color="secondary" />
                            </ListItemIcon>
                            <Typography variant="body2">
                              {feature}
                            </Typography>
                          </ListItem>
                        ))}
                      </List>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </Box>

            <Box sx={{ mb: 3, mt: 10 }}>
              <Typography variant="h5" component="h2" sx={{
                display: 'flex',
                alignItems: 'center',
                gap: 1,
                fontSize: isMobile ? '1.2rem' : '1.5rem',
                mb: 2,
                color: 'primary.dark'
              }}>
                <MedicalServices fontSize={isMobile ? 'small' : 'medium'} color="primary" /> 
                {t.tipsTitle}
              </Typography>
              
              <List dense={isMobile}>
                {t.tips.map((item, index) => (
                  <ListItem key={`tip-${index}`} sx={{ alignItems: 'flex-start', px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 32, mt: '4px' }}>
                      <CheckCircle color="info" fontSize={isMobile ? 'small' : 'medium'} />
                    </ListItemIcon>
                    <Typography sx={{ fontSize: isMobile ? '0.9rem' : '1rem' }}>
                      {item}
                    </Typography>
                  </ListItem>
                ))}
              </List>
            </Box>
          </Paper>

          <Box sx={{ textAlign: 'center', mt: 2 }}>
            <Link href="/blog" passHref legacyBehavior>
              <Button 
                variant="contained" 
                color="primary"
                size={isMobile ? 'medium' : 'large'}
                startIcon={<ArrowBack fontSize={isMobile ? 'small' : 'medium'} />}
                sx={{ 
                  px: isMobile ? 3 : 4,
                  py: 1,
                  fontWeight: 600,
                  fontSize: isMobile ? '0.9rem' : '1rem',
                  borderRadius: 2
                }}
              >
                {t.backButton}
              </Button>
            </Link>
          </Box>
        </Container>
        <Footer />
      </Box>
    </>
  )
}

export default function SanatoriumPage() {
  return (
    <Provider store={store}>
      <LanguageProvider>
        <SanatoriumGuide />
      </LanguageProvider>
    </Provider>
  )
}